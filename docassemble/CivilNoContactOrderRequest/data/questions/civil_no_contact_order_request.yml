metadata:
  title: Civil No Contact Order
  short title: Civil No Contact Order
  comment: This program helps you ask the court to order someone abusing you to leave you alone. You can ask for a CNCO if you are a victim of sexual assault, or sexual abuse.
  authors:
    - Vivian McNaughton
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:escape_button.yml  
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - others_protected: ALPeopleList.using(complete_attribute='complete')
  - minors_protected: ALPeopleList.using(there_are_any=False)
  - adults_protected: ALPeopleList.using(there_are_any=False)
  - parents_guardians: ALPeopleList.using(complete_attribute='complete')
  - other_parties[0].employer_address: ALAddress
  - other_parties[0].service_address: ALAddress
  - other_parties[0].bonus_service_address: ALAddress
  - crisis_center: ALAddress                                       
  - abusive_acts: DAList.using(object_type=Thing, there_are_any=True, complete_attribute='complete')
  - home: ALAddress
  - report_numbers: DAList.using(object_type=Thing, there_are_any=False)
  #- others_with_minor_initials: ALPeopleList.using(there_are_any=False)
  - away_address_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - no_remain_address_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - school_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - work_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - away_work_address_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - away_school_daycare_list: DAList.using(object_type=ALAddress, there_are_any=False)
  - protected_workplace: ALAddress
  - protected_school: ALAddress
  - other_school: ALAddress
  - protected_day_care: ALAddress
  - other_ops: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - other_cases: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
---
code: |
  ilao_easy_form_title = "Civil No Contact Order"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/civil-no-contact-order-request"
  form_name = "Civil No Contact Order"
  al_form_type = 'new_case'
  user_ask_role = 'plaintiff'
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-CivilNoContactOrderRequest'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_basic: Basic info
  - section_petitioner: People you want to protect
  - section_incidents: What happened
  - section_protections: Protections
  - section_respondent: Person you want protection from
  - section_filing_info: Filing and service details
  - section_download: Download
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  snapshot_start
  instructions
  set_progress(5)
  first_response_note
  cnco_explainer
  accept_terms  
  whats_next
  content_warning

  nav.set_section('section_basic')
  if not experienced_abuse:
    no_abuse_kickout
  if in_illinois == False:
    not_in_illinois
  if users[0].age_in_years() < 18:
    too_young_kickout
  
  
  users[0].name.first
  if filing_for_whom != "me":
    #about_behalf
    users[1].name.first
    filing_for_whom_sets_there_are_any
  #protect_whom
  #if protect_whom['me']:
  #  if user_military and has_military_order:
  #    military_order_note
  trial_court_index
  if jurisdiction_type.all_false():
    other_jurisdiction_location
  
  other_parties[0].name.first
  if not user_relationship['unrelated']:
    related_note
  set_progress(20)
  
  #protect_whom_sets_there_are_any
  nav.set_section('section_petitioner')
  hide_address
  if filing_for_whom != "me" and not hide_address:
    users[1].address.address
  else:
    users[0].address.address
  if others_protected.there_are_any:
    others_protected.gather()
    pop_protected_code

  
  nav.set_section('section_incidents')
  
  abusive_acts_intro
  abusive_acts.gather()
  if trial_court_index == -1:
    police_check_catch
    abuse_type
    
  nav.set_section('section_protections')
  order_type
  #May need to add emergency reason back in after AOIC redesigns forms.
  #if order_type['emergency'] and trial_court_index == -1:
  #  emergency_reason
  if protection_requested['away_places']:
    if protected_place_types['Home']:
      run_home_address_block
    if protected_place_types['Workplace']: 
      protected_workplace.name
    if protected_place_types['School']:
      protected_school.name
    if protected_place_types['day_care']:
      protected_day_care.name
    if protected_place_types['Other']:
      other_places
    if trial_court_index != -1:
      if same_school:
        if prohibit_school:
          respondent_age_logic
          if respondent_is_minor:
            if parents_or_guardians != "none":
              guardian_there_are
              parents_guardians.gather()
  other_parties[0].anything_else
  if protection_requested.all_false() and not other_parties[0].anything_else:
    other_parties[0].no_protection_chosen
  set_progress(40)
  
  nav.set_section('section_respondent')
  if trial_court_index == -1:
    other_parties[0].cook_sex
  else:
    other_parties[0].state_gender
  other_parties[0].race
  knows_respondent_dob
  other_parties[0].weight
  other_parties[0].eyes
  other_parties[0].hair
  other_parties[0].features
  if trial_court_index == -1:
    other_parties[0].has_alias
  else:
    other_parties[0].ssn
  other_parties[0].drivers_license
  if other_parties[0].has_vehicle:
    other_parties[0].license_plate
  if other_parties[0].another_number_check:
    other_parties[0].another_number_description
  other_parties[0].phone_number
  if other_parties[0].address_known or other_parties[0].last_address_known:
    other_parties[0].address.address
  else:
    unknown_address_note
  set_progress(60)
  if trial_court_index == -1:
    respondent_on_social_media
  if other_parties[0].has_job == True:
    other_parties[0].employer_name
  caution_reasons
  if trial_court_index == -1:
    if caution_reasons['armed'] or caution_reasons['home']:
      other_parties[0].weapons_info
    respondent_on_probation
    if has_other_ops:
      other_ops.gather()
    previous_cook_case_type
    if has_other_cases == "Yes":
      other_cases.gather()  
  else:
    if respondent_jail_check:
      respondent_jail_name

  set_progress(80)
  nav.set_section('section_filing_info')
  if service_method == "sheriff" and service_state != "IL":
    service_county
  if service_method != "idk":
    other_parties[0].which_address
    if other_parties[0].bonus_service_check == True:
      other_parties[0].which_bonus_address
      if other_parties[0].bonus_contact_info:
        other_parties[0].alt_email 
  if trial_court_index == -1 and service_method == "sheriff":  
    service_information

  users[0].address.address
  users[0].phone_number
  if users[0].has_email_address:
    users[0].email
  e_signature
  
  nav.set_section('section_download')
  check_ages
  
  if trial_court_index == -1:
    cook_stay_away_addresses
  state_stay_away_addresses

  pop_protected_code  
  forms_assembling
  addendum_check
  #adult_minor_sorting
  snapshot_forms
  set_progress(100)
  get_docs_screen
---
code: |
  stuff_to_snapshot = {
  	'start_time': str(current_datetime().format_datetime()),
  	'started_interview': True, 
  	}
  
  try:
    stuff_to_snapshot['ip_address'] = device(ip=True)
  except:
    pass
  
  stuff_to_snapshot['user_zip'] = showifdef('users[0].address.zip')

  stuff_to_snapshot['downloaded_forms'] = showifdef('forms_assembling')
  
  stuff_to_snapshot['filing_county'] = showifdef('trial_court.address.county')  
  
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  reconsider('snapshot_interview_state')
  snapshot_forms = True
---
#others protected gather code block
code: |
  others_protected[i].name.first
  #if others_protected[i].why_include['military']:
  #  others_protected[i].military_order
  if others_protected[i].why_include.all_false():
    others_protected[i].cannot_include
  else:
    others_protected[i].is_minor
    if trial_court_index != -1:
      if hide_address:
        others_protected[i].use_safe_address
      if hide_address == False or others_protected[i].use_safe_address == False:
        others_protected[i].address.address
  others_protected[i].complete = True
---
reconsider: True
code: |
  popping_index = 0
  if others_protected.there_are_any:
    while (popping_index < others_protected.number_gathered()) and (others_protected.number_gathered() > 0):
      if others_protected[popping_index].why_include.all_false():
        others_protected[popping_index].cannot_include
        others_protected.pop(popping_index)
      else:
        #originally this was just incrementing the index, but I added these variable checks because some variables were not being defined when switching counties
        others_protected[popping_index].is_minor
        if trial_court_index != -1:
          if hide_address == False or others_protected[popping_index].use_safe_address == False:
            others_protected[popping_index].address.address
        popping_index += 1
  pop_protected_code = True
---
#abusive events gather code block
code: |
  abusive_acts[i].name.text
  abusive_acts[i].place
  abusive_acts[i].description
  if trial_court_index == -1:
    abusive_acts[i].police_check
  abusive_acts[i].complete = True
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    for act in abusive_acts:
      act.police_check
  police_check_catch = True
---
code: |
  parents_guardians[i].name.first
  parents_guardians[i].complete = True
---
depends on:
  - trial_court_index
  - protected_place_types['School']
  - same_school
  - prohibit_school
  - respondent_is_minor
  - parents_or_guardians
code: |
  if trial_court_index != -1:
    if protected_place_types['School']:
      if same_school:
        if prohibit_school:
          if respondent_is_minor:
            if parents_or_guardians != "none":
              parents_guardians.there_are_any = True
  guardian_there_are = True
---
id: welcome
question: |
  Civil No Contact Order
subquestion: |
  Welcome to Illinois Legal Aid Online's **Civil No Contact Order** Easy Form.

  This program will help you make forms to ask for a Civil No Contact Order (CNCO) against someone who has sexually abused or assaulted you. You can ask for a CNCO if you are a survivor of sexual assault, or sexual abuse. The forms you make with this program can only be used in Illinois.

  If the survivor of abuse is not you, but a child or an adult who is not capable of filing a petition, you may file a petition on behalf of the survivor.

  To learn more, read ILAO's article about [**starting a case to get a Civil No Contact Order**](https://www.illinoislegalaid.org/legal-information/starting-case-get-civil-no-contact-order).
  
  #### Your safety is important
  
  * If you are in immediate danger, call 911.
  * If you need to exit this program, click the red **Escape** button at the top of the screen.
  * Learn about [**safety while using the Internet**](https://www.thehotline.org/help/tech-social-media-safety/).
field: sees_nav_bar
---
id: instructions
continue button field: instructions
question: |
  Instructions
subquestion: |
  To use this program:

  * You must be the survivor of sexual assault or sexual abuse, and
  * You must file your forms in the county were the abuse took place or in the county where you, the perpetrator, or someone you are filing for live.
  
  To complete this program you will need to know:
  
  * An address where you can receive court documents if you do not want the perpetrator to know the address where you are staying,
  * The perpetrator's name, and
  * Details about the abuse and when it took place.
  
  Set aside 10 to 20 minutes to finish this program. You can login and save your work to continue later.
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: cnco explainer
continue button field: cnco_explainer
question: |
  About Civil No Contact Orders
subquestion: |
  A Civil No Contact Order (CNCO) is a protective order protects survivors of sexual assault, or sexual abuse from the perpetrator. The Order can also be used to protect the survivor's family and rape crisis center workers. 

  If you want to know what type of protective order is best for you, use ILAO's [**Which protective order is right for me?**](https://www.illinoislegalaid.org/legal-information/which-protective-order-right-me) tool to learn more.

  With a CNCO, the court can tell the perpetrator to:

  * Stay away from the survivor,
  * Stop contacting the survivor through telephone, computer, email, texts, mail, instant message, social media, or other people,
  * Stay a certain distance away from the survivor,
  * Stay away from specific places like a home, a school, a daycare, or an office, and
  * Transfer to another school, if the survivor and the perpetrator attend the same school.

  ${collapse_template(have_mpo)}
---
template: have_mpo
subject: |
  **Note for service members of the Illinois National Guard and other reserve military components**
content: |
  If you have already gotten a Military Protective Order against the perpetrator, you should bring a copy of it to your CNCO hearing.
---
id: content warning
continue button field: content_warning
question: |
  Content warning
subquestion: |
  This program will ask questions about sexual assault and sexual abuse. Answering these questions may be upsetting. If you become emotionally overwhelmed, please take a break from the program.  If you are using your ILAO Easy Forms account, you can continue your progress later.

  When the court hears your request for a CNCO, you may need to talk in court about these topics. What you say will be in the court's records.
---
id: first response note
continue button field: first_response_note
question: |
  In case of an emergency
subquestion: |
  This program is not a first response resource or a therapuetic resource. If you need such help, you can:

  * Call 911 or local law enforcement (police).
  * Call a rape crisis hotline. To find the nearest center and call its 24-hour hotline, go to the [**Illinois Coalition Against Sexual Assault website**](https://icasa.org/) or call (217) 753-4117.  For Chicago, you can contact the Chicago Rape Crisis Hotline online at [**Resilience**](https://www.ourresilience.org/) or call (888) 293-2080.
  * Call or text the 988 Lifeline at 988.  There is also an [**online chat service**](https://chat.988lifeline.org/).
  * Call RAINN, a 24-hour national sexual assault hotline at (800) 656-HOPE (4673). There is also an [**online chat service**](https://hotline.rainn.org/online).
---
#replace the lengthy subquestion with a shorter summary and link to https://www.illinoislegalaid.org/legal-information/sexual-assault-and-civil-no-contact-orders-common-questions#whatissexualassault once the page is live
id: experienced abuse
question: |
  Have you or the people you want to protect been the survivor of sexual assault or sexual abuse?
subquestion: |
  ${collapse_template(assault_conduct_define)}
fields:
  - no label: experienced_abuse
    datatype: yesnoradio
---
# old text:
# * Non-consensual sexual conduct, which includes as any intentional touching or contact with a person’s sexual organs, anus, or breast, or
#  *Non-consenual sexual penetration, which includes any contact between the sex organ or anus of one person with the other person’s sex organ, mouth, or anus. It also includes any insertion of any part of a person’s body or object into the sex organ or anus of the other.
template: assault_conduct_define
subject: |
  **Definitions of sexual assault and non-consensual sexual conduct**
content: |
  In Illinois, **sexual assault** occurs when a person does non-consensual sexual conduct or non-consensual sexual penetration. In some cases it can be called **rape**.

  **Sexual conduct** can be:

  * Touching or fondling someone's genitals, anus, or breast over or under clothes,
  * Touching or fondling any part of the body of a child under the age of 13 for the purpose of sexual gratification, or
  * Transferring or transmitting semen on any part of a clothed or unclothed body.

  **Sexual penetration** is the putting of a body part, object, or animal into someone's genitals, anus, or mouth.
  
  Conduct is **non-consensual** when it is done without the consent of both people, and it includes situations where:
  
  * The perpetrator uses force or threatens to use force against the survivor,
  * The perpetrator knows that the survivor is unable to understand what is happening or cannot give informed consent,
  * The perpetrator is a family member of the survivor, and the survivor is under 18 years old, or
  * The perpetrator is 17 years old or older and holds a position of trust, authority, or supervision over the survivor, and the survivor is between 13 and 17 years old.
---
id: no abuse kickout
event: no_abuse_kickout
question: |
  Sorry
subquestion: |
  To qualify for a Civil No Contact Order, you or the people you want to protect must have been the survivor of sexual assault or sexual abuse.
  
  A different protective order may work for your situation. Use ILAO's [**Which protective order is right for me?**](https://www.illinoislegalaid.org/legal-information/which-protective-order-right-me) tool to learn more.
buttons:
  - Exit: exit
  - Restart: restart
---
id: petitioner military order check
question: |
  Are you a service member of the Illinois National Guard or another reserve military component serving in Illinois?
fields:
  - no label: user_military
    datatype: yesnoradio
  - Do you have a Military Protective Order against the perpetrator?: has_military_order
    datatype: yesnoradio
    js show if:
      val('user_military') === true
  - note: |
      You should to bring a copy of your Military Protective Order to your hearing.
---
id: military order note
continue button field: military_order_note
question: |
  Your Military Protective Order
subquestion: |
  You should to bring a copy of your Military Protective Order to your hearing.
---
id: in illinois
question: |
  Do you want to file for a Civil No Contact Order in Illinois?
subquestion: |
  You can file in Illinois if:

  * You live in Illinois,
  * You are filing on behalf of someone who lives in Illinois,
  * The person you are filing against lives in Illinois, or
  * The assault or abuse took place in Illinois.
fields:
  - no label: in_illinois
    datatype: yesnoradio
---
id: not in illinois
event: not_in_illinois
question: |
  Sorry
subquestion: |
  This program is only for people who want a Civil No Contact Order in Illinois.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: county
continue button field: case_county
question: |
  In which county will you file your ${ form_name } request?
subquestion: |
  You can file your case in the county:
  
  * Where you or the person you are filing for lives,
  * Where the person you are filing against lives, or
  * Where the abuse or assault occurred.
fields:
  - County: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
  - note: |
      ${ collapse_template(county_lookup_help) }  
---
template: county_lookup_help
subject: |
  **What if I need help finding the county?**
content: |  
    You can use this [**City-to-County Finder**](https://www.statsamerica.org/CityCountyFinder/) to find the county.
---
depends on:
  - trial_court_index
code: |
  trial_court = court_list.as_court('trial_court', trial_court_index)
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 21)
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
    
  court_name = str(trial_court.name)
  court_circuit = str(trial_court.circuit)
  court_street_address = str(trial_court.address.address)
  court_city = str(trial_court.address.city)
  court_state = str(trial_court.address.state)
  court_zip = str(trial_court.address.zip)
  filing_county = str(trial_court.address.county)
  courthouse_info = court_name + ", " + court_street_address + ", " + court_city + ", " + court_state + " " + court_zip
---
#If this question gets reimplemented, add court 21 to the options.
id: Cook County district
question: |
  Which Cook County courthouse will you file in?
subquestion: |
  ${ collapse_template(cook_district_help) }  
field: cook_district
choices:
  - First Municipal District, Daley Center, 50 W. Washington Street, Chicago: 15
  - Second Municipal District, 5600 Old Orchard Road, Skokie: 16
  - Third Municipal District, 2121 Euclid Avenue, Rolling Meadows: 17
  - Fourth Municipal District, 1500 Maybrook Drive, Maywood: 18
  - Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview: 19
  - Sixth Municipal District, 16501 South Kedzie Parkway, Markham: 20
---
template: cook_district_help
subject: |
  **What if I am not sure?**
content: |  
  Visit **[Illinois Court Help](https://www.ilcourthelp.gov/)**, or you can call or text (833) 411-1121 for assistance.
---
id: filing for whom
question: |
  Do you want a Civil No Contact Order for yourself?
subquestion: |
  If you want the CNCO to protect both yourself and other people, you should click **Yes**.
fields:
  - no label: filing_for_whom
    input type: radio
    choices:
      - Yes: me
      - No, I want to file on behalf of a minor child.: child
      - No, I want to file on behalf of a high risk adult who can't file for themself.: adult
---
id: about filing on behalf of
continue button field: about_behalf
question: |
  About filing for someone else
subquestion: |
  This program allows you to make forms to ask for a CNCO for someone else. You should answer the following questions from the point of view of ${users[1].name.full(middle='full')}.
---
id: protect whom
question: |
  Who do you want this Civil No Contact Order to protect?
subquestion: |
  You can file for a member of your family or your household so long as you have their consent.
  
  You can file for minor children or high-risk adults who can't file for themselves. You do not need to be related to them.
  
  Check all that apply.
fields:
  - no label: protect_whom
    datatype: checkboxes
    none of the above: False
    choices:
      - Myself: me
      - A minor child: minor
      - An adult who cannot file due to age, disablility or health: adult
validation code: |
  if protect_whom.all_false():
    validation_error("You need to pick someone to protect.")
---
#depends on:
#  - protect_whom["minor"]
#  - protect_whom["adult"]
#code: |
#  if protect_whom['minor'] or protect_whom['adult']:
#    others_protected.there_are_any = True 
#  else:
#    others_protected.there_are_any = False
---
id: petitioner name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
subquestion: |
  Enter your name, even if you are filing the Civil No Contact Order on behalf of a minor child or a high-risk adult. In court and on the forms, you will be listed as the **Petitioner**.
fields:
  - code: |
      users[0].name_fields()
---
id: behalf of name
sets:
    - users[1].name.first
    - users[1].name.last
    - users[1].name.middle
    - users[1].name.suffix
question: |
  Who are you filing on behalf of?
fields:
  - code: |
      users[1].name_fields()
---
sets:
  - other_parties[0].name.first
id: other parties name
question: |
  Who did the sexual abuse or sexual assault?
subquestion: |
  This is the person you will file the Civil No Contact Order against. They are sometimes called the **{perpetrator}**. In court and on the forms, they will be listed as the **Respondent**.

  You will need to enter their full name. If you do not know their full name, you may want to talk with a lawyer to discuss your options. Use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
fields:
  - code: |
      other_parties[0].name_fields()
terms:
  - "perpetrator":
      The perpetrator is the person who did the abusive, harmful, or threatening behavior.
---
#words used in relationship question
depends on:
  - filing_for_whom
  - users[1].name.first
  - users[1].name.middle
  - users[1].name.last
  - users[1].name.suffix
  - other_parties[0].name.first
  - other_parties[0].name.middle
  - other_parties[0].name.last
  - other_parties[0].name.suffix
code: |
  if filing_for_whom == "me":
    we_they = "we"
    i_they = "I"
    i_behalf = "I"
    their_respondents = "their"
    am_is = "am"
    they_respondent = "they"
    my_their = "my"
    you_behalf = "you"
    were_was = "were"
    do_does = "do"
    you_them = "you_them"
    your_their = "your"
    me_behalf = "me"
    my_behalf = "my"
    go_goes = "go"
    have_has = "have"
    you_they = "you"
    your_behalf = "your"
    know_knows = "know"
    me_them = "me"
    want_wants = "want"
  else:
    we_they = "they"
    i_they = "their"
    i_behalf = users[1].name.full(middle='full')
    their_respondents = other_parties[0].name.full(middle='full')
    their_respondents += "'s"
    am_is = "is"
    they_respondent = other_parties[0].name.full(middle='full')
    my_their = "their"
    you_behalf = users[1].name.full(middle='full')
    were_was = "was"
    do_does = "does"
    you_them = "them"
    your_their = "their"
    me_behalf = users[1].name.full(middle='full')
    my_behalf = users[1].name.full(middle='full')
    my_behalf += "'s"
    go_goes = "goes"
    have_has = "has"
    you_they = "they"
    your_behalf = users[1].name.full(middle='full')
    your_behalf += "'s"
    know_knows = "knows"
    me_them = "them"
    want_wants = "wants"
---
id: relationship
question: |
  % if filing_for_whom == "me":
  How are you related to ${other_parties[0].name.full(middle='full')}?
  % else:
  How is ${users[1].name.full(middle='full')} related to ${other_parties[0].name.full(middle='full')}?
  % endif
fields:
  - Relationship: user_relationship
    datatype: checkboxes
    none of the above: False
    choices:
      - ${capitalize(we_they)} are not related.: unrelated
      - ${capitalize(we_they)} dated.: dated
      - ${capitalize(we_they)} are related through current or past marriage. For example, ${i_behalf} ${am_is} ${their_respondents} spouse, ex-spouse, in-law, step-child, or other relative.: marriage
      - ${capitalize(we_they)} have children together.: children
      - ${capitalize(we_they)} are related through blood. For example, ${i_behalf} ${am_is} ${their_respondents} parent, child, sibling, grandchild, grantparent, or other blood relative.: blood   
      - ${capitalize(we_they)} have a blood relationship through a child. For example, ${i_behalf} ${am_is} ${their_respondents} niece's parent.: blood_child
      - ${capitalize(we_they)} share or have shared a home.: home
      - ${capitalize(we_they)} have a family or household relationship through a child ${i_behalf} ${am_is} the adoptive parent, legal guardian, or custodian of.: adopt_child
      - They are ${my_their} personal caregiver.: caregiver
validation code: |
    if user_relationship['unrelated']:
      if user_relationship['dated'] or user_relationship['marriage'] or user_relationship['children'] or user_relationship['blood'] or user_relationship['blood_child'] or user_relationship['adopt_child'] or user_relationship['caregiver']:
        validation_error("If you have any of the listed relationships with the person you are filing against, you should not select the 'We are not related.'")
---
id: related note
continue button field: related_note
question: |
  Order of Protection
subquestion: |
  If the **{perpetrator}** of the abuse is a family member, household member, boyfriend, girlfriend, or ex, you may want to apply for an Order of Protection instead of a CNCO. An Order of Protection can help with more issues and may be easier to get.
  
  Use ILAO's [**Which protective order is right for me?**](https://www.illinoislegalaid.org/legal-information/which-protective-order-right-me) tool to help you find the protective order for your situation.
  
  If you would like to make a CNCO, click **Next.** Otherwise, if you would like to file an Order of Protection, you can use ILAO's [**Order of protection Easy Form**](https://www.illinoislegalaid.org/legal-information/order-protection). 
terms:
  - "perpetrator":
      The perpetrator is the person who did the abusive, harmful, or threatening behavior.
---
id: hide address
question: |
  ${capitalize(do_does)} ${you_behalf} want to keep ${your_their} home address hidden?
subquestion: |
  You do not have to include ${your_their} home address if disclosing it would risk ${you_them} or someone in ${your_their} family or household being abused or assaulted. If you do not include ${your_their} home address, you will need to enter a mailing address where ${you_behalf} can receive court notices.
field: hide_address
choices:
  - Yes: True
  - No: False
---
id:  others protected safe address check
question: |
  Do you want to use the safe mailing address for ${others_protected[i].name.full(middle='full')}?
subquestion: |
  The safe mailing address you entered is:
  
  ${users[0].address.line_one(bare=True)}
  ${users[0].address.line_two()}
fields:
  - no label: others_protected[i].use_safe_address
    datatype: yesnoradio
---
id: any others protected
question: |
  Do you want the Civil No Contact Order to protect anyone else?
subquestion: |
  So far you have told us about ${others_protected.full_names()}.

  You can protect someone with this order if:
  
  * They were sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')},
  * They are your family or household member,
  * They are the family or household member of someone sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')},
  * They are a member of the Illinois National Guard or another reserve military component who has received a Military Protective Order, or
  * They work for a rape crisis center providing services to a survivor of ${other_parties[0].name.full(middle='full')}.
fields:
  - no label: others_protected.there_is_another
    datatype: yesnoradio
---
sets:
  - users[0].address.address
id: get user address
question: |
  % if hide_address:
  What is your mailing address?
  % else:
  What is your home address?
  % endif
subquestion: |
  % if hide_address:
  **This address will appear on your court papers.** You may receive court notices and documents about your case at this address.
  % else:
  **This address will appear on your court papers.** If you do not want this, click **Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[0].address.zip
---
sets:
  - users[1].address.address
id: behalf of address
question: |
  % if hide_address:
  What is ${users[1].name.full(middle='full')}'s mailing address?
  % else:
  What is ${users[1].name.full(middle='full')}'s home address?
  % endif
subquestion: |
  % if hide_address:
  **This address will appear on the court papers.** They may receive court notices and documents about their case at this address.
  % else:
  **This address will appear on the court papers.** If they do not want this, click **Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[1].address.address
    address autocomplete: True
  - Address line 2: users[1].address.unit
    required: False
  - City: users[1].address.city
  - State: users[1].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[1].address.zip
---
id: others protected address
question: |
  What is ${others_protected[i].name.full(middle='full')}'s mailing address?
subquestion: |
  **This address will appear on your court papers.** If you do not want to list ${others_protected[0].name.full(middle='full')}'s address, you can leave this blank.
fields:
  - Street address: others_protected[i].address.address
    address autocomplete: True
    required: False
  - Address line 2: others_protected[i].address.unit
    required: False
  - City: others_protected[i].address.city
    required: False
  - State: others_protected[i].address.state
    required: False
    code: |
      states_list() 
  - ZIP code: others_protected[i].address.zip
    required: False
---
depends on:
  - hide_address
  - users[0].address.address
  - users[0].address.unit
  - users[0].address.city
  - users[0].address.state
  - users[0].address.zip
code: |
  if hide_address:
    home.address
  elif filing_for_whom == "me":
    home = users[0].address
  else:
    home = users[1].address
  run_home_address_block = True
---
id: user birthdate
question: |
  When were you born?
fields:
  - Date of birth: users[0].birthdate
    datatype: BirthDate
    alMax: today()
---
id: too young kickout
event: too_young_kickout
question: |
  Sorry
subquestion: |
  You must be 18 years old or older to use this program. You can ask an adult 18 years old or older to file to protect you.
  
   Click **Back** if you made a mistake. Or you can talk with a lawyer to discuss your options. Use **[Get Legal Help](https://www.illinoislegalaid.org/get-legal-help)** to find free or low-cost legal services in your area.
buttons:
  - Exit: exit
  - Restart: restart
---
id: case number
question: |
  What is the case number?
subquestion: |
  If this is a new case, leave this blank. The clerk will give you a case number when you file.
fields:
  - Case number: case_number
    maxlength: 30
    required: False
---
id: phone number
question: |
  What safe phone number do you want to list on your court forms?
subquestion: |
  The court might need to contact you about this case.

  **This phone number will appear on your court forms.** If you do not want to list a phone number on your forms, leave this blank.
fields:
  - Safe phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
---    
id: notice by email
question: |
  Do you have a safe email address?
subquestion: |
  If you have a safe email address, you must list it so the court and other parties can contact you about this case.
fields:
  - Have a safe email?: users[0].has_email_address
    datatype: yesnoradio
---
id: email address
question: |
  What email address do you want to list on your court forms?
subquestion: |
  **This email will appear on your court forms.** If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  To make a new email account try one of these email services:
  
  * [**Gmail**](https://accounts.google.com/SignUp)
  * [**Outlook**](https://outlook.live.com/owa/?nlp=1&signup=1)
  * [**Yahoo**](https://login.yahoo.com/account/create?.lang=en-US&.intl=us)
  
  Be sure to check your email daily, otherwise you may miss important information about your case.
fields:
  - Safe email address: users[0].email    
    datatype: email
---
sets:
    - others_protected[i].name.first
    - others_protected[i].name.last
    - others_protected[i].name.middle
    - others_protected[i].name.suffix
id: others protected name
question: |
  What is the name of the ${ordinal(i)} other person you want to protect?
fields:
  - code: |
      others_protected[i].name_fields()
---
id: others protected birthday
question: |
  When was ${others_protected[i].name.full(middle='full')} born? 
fields:
  - Their date of birth: others_protected[i].birthdate
    datatype: BirthDate
    alMax: today()
---
id: others protected is minor
question: |
  Is ${others_protected[i].name.full(middle='full')} under 18 years old?
fields:
  - no label: others_protected[i].is_minor
    datatype: yesnoradio
---
on change: 
  protect_whom['minor']: |
    undefine('protect_whom_sets_there_are_any')
    if others_protected.number_gathered() == 0:
      undefine('others_protected.there_are_any')
  protect_whom['adult']: |
    undefine('protect_whom_sets_there_are_any')
    if others_protected.number_gathered() == 0:
      undefine('others_protected.there_are_any')
---
code: |
  if protect_whom['minor'] or protect_whom['adult']:
    others_protected.there_are_any = True
  protect_whom_sets_there_are_any = True
---
on change:
  filing_for_whom: |
    undefine('filing_for_whom_sets_there_are_any')
    if others_protected.number_gathered() == 0:
      undefine('others_protected.there_are_any')
---
code: |
  if filing_for_whom == "child" or filing_for_whom == "adult":
    others_protected.there_are_any = False
  filing_for_whom_sets_there_are_any = True
---
id: others protected there are any
question: |
  Do you want the CNCO to protect anyone else?
subquestion: |
  You can list someone as a protected person if:

  * They were sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')},
  * They are your family or household member,
  * They are the family or household member of someone sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')},
  * They are a member of the Illinois National Guard or another reserve military component who has received a Military Protective Order, or
  * They work for a rape crisis center providing services to a survivor of ${other_parties[0].name.full(middle='full')}.
fields:
  - no label: others_protected.there_are_any
    datatype: yesnoradio
---
id: why include
question: |
  Why do you want the CNCO to protect ${others_protected[i].name.full(middle='full')}?
fields:
  - no label: others_protected[i].why_include
    datatype: checkboxes
    choices:
      - They were sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')}.: victim
      - They are my family or household member.: petitioner_household
        #show if: protect_whom['me']
      - They are the family or household member of someone sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')}.: other_household
        #show if: protect_whom['minor'] or protect_whom['adult']
      - They are a member of the Illinois National Guard or another reserve military component who has received a Military Protective Order.: military
      - They work for a rape crisis center providing services to a survivor of ${other_parties[0].name.full(middle='full')}.: crisis_center
  - note: |
      **Note:** You should to bring a copy of their Military Protective Order to your hearing.
    js show if: 
      val('others_protected[i].why_include["military"]') === true
---
id: include military order
continue button field: others_protected[i].military_order
question: |
  ${others_protected[i].name.full(middle='full')}'s Military Protective Order
subquestion: |
  You should to bring a copy of ${others_protected[i].name.full(middle='full')}'s Military Protective Order to your hearing.
---
id: cannot include
continue button field: others_protected[i].cannot_include
question: |
  Sorry
subquestion: |
  ${others_protected[i].name.full(middle='full')} cannot be included in the CNCO.

   Click **< Back** if you made a mistake. Otherwise, click **Next** to continue making your forms without including ${others_protected[i].name.full(middle='full')}.
---
id: abusive acts intro
continue button field: abusive_acts_intro
question: |
  Reasons for the Civil No Contact Order
subquestion: |
  The following questions will ask about the sexual assault or sexual abuse done by ${other_parties[0].name.full(middle='full')}.
  
  You should be specific. Tell when and where each event happened, and how it affected ${you_behalf}.
  
  You should enter the most recent event first.
  
  The judge will expect more details about recent events than past events. Enter exact dates if you can. For repeated events, you may tell how often the behavior took place.
---
id: abusive act info
question: |
  % if i == 0:
  Tell us about the most recent incident of sexual assault or sexual abuse
  % else:
  Tell us about the ${ordinal(i)} most recent incident of sexual assault or sexual abuse
  % endif
subquestion: |
  Try to be specific about:

  * What ${other_parties[0].name.full(middle='full')} did,
  * What ${other_parties[0].name.full(middle='full')} said,
  * Where the abuse happened, and
  * Who was there when the abuse happened.
  
  Include any threats or use of a weapon. If the abuse was repeated, you can note that in your description.

  % if trial_court_index == -1:
  The petition has space for about 500 characters including spaces for each incident.
  % else:
  The petition has space for about 800 characters including spaces for each incident.
  % endif
fields:
  - Date: abusive_acts[i].name.text
    maxlength: 20
    help: |
      If you don't remember the exact date, enter the month and year. Use abbreviations if needed.
  - Time: abusive_acts[i].time
    required: False
    maxlength: 20
    help: |
      If you don't remember the exact time, enter "morning" or "afternoon" or "night." Use abbreviations if needed.
  - Location: abusive_acts[i].place
    maxlength: 50
    help: |
      If you don't remember the exact address, you can describe the location. For example, you could enter "the parking lot at my workplace."
  - What happened: abusive_acts[i].description
    input type: area
    rows: 14
    maxlength: |
      % if trial_court_index == -1:
      500
      % else:
      800
      % endif
    help: |
      % if trial_court_index == -1:
      The petition has space for about 500 characters including spaces for each incident.
      % else:
      The petition has space for about 800 characters including spaces for each incident.
      % endif
---
#replace collapse template with link as noted in earlier page
id: abuse type check
question: |
  Did ${other_parties[0].name.full(middle='full')}'s actions involve any of the following?
subquestion: |
  ${collapse_template(assault_conduct_define)}
fields:
  - no label: abuse_type
    datatype: checkboxes
    choices: 
      - Non-consensual sexual conduct: conduct
      - Non-consensual sexual penetration: penetration
    none of the above: |
      I don't know
---
id: abusive act police report
question: |
  Was a police report filed for the ${ordinal(i)} abusive act?
subquestion: |
  A police report isn't required, but it is something that the Judge will want to know.
fields:
  - no label: abusive_acts[i].police_check
    datatype: yesnoradio
  - Police report number: abusive_acts[i].police_number
    required: False
    show if: abusive_acts[i].police_check
    maxlength: 30
    help: |
      If you do not know, you can leave this blank.
---
id: abusive act is there another
question: |
  Do you want to add another time ${other_parties[0].name.full(middle='full')} committed sexual assault or sexual abuse?
subquestion: |
  You can enter up to 7 incidents in total.
  
  % if len(abusive_acts.elements) == 1:  
  So far you told us about 1 incident. 
  % else:
  So far you told us about ${ str(len(abusive_acts.elements)) } incidents. 
  % endif
fields:
  - no label: abusive_acts.there_is_another
    datatype: yesnoradio
---
code: |
  if abusive_acts.number_gathered() >= 7:
    abusive_acts.there_is_another = False
---
id: order type
question: |
  What kind of Civil No Contact Order do you want?
subquestion: |
  There are two kinds of Civil No Contact Orders: Emergency and Plenary. You can ask the court for both if you want.
  
  An Emergency Order is an order which takes effect immediately. The order can be issued even before your perpetrator knows that you have filed a petition. However, the order only lasts 21 days, or until a formal court hearing where the perpetrator can present a case to the court also. 
  
  A Plenary Order, is an order issued after a hearing at which the perpetrator can also present a case. This order can last a long time, usually two years.

  If you want to be protected before you are able to ask for a long-term order, you can choose both an emergency order and a plenary order.
fields:
  - no label: order_type
    datatype: checkboxes
    none of the above: False
    choices:
      - Emergency Civil No Contact Order: emergency
      - Plenary Civil No Contact Order: plenary
---
id: emergency reason
question: |
  Why should the court grant an Emergency Order right away?
subquestion: |
  Use complete sentences and proper punctuation. Your response will appear in your forms exactly as you type it. 
fields:
  - no label: emergency_reason
    maxlength: 200
    input type: area
---
id: protection requested
question: |
  What do you want the court to tell ${other_parties[0].name.full(middle='full')} to do?
subquestion: |
  ${collapse_template(stay_away_contact)}
fields:
  - ${capitalize(i_behalf)} ${want_wants} the court to order ${other_parties[0].name.full(middle='full')} to:: protection_requested
    datatype: checkboxes
    none of the above: True
    choices:
      - "Stay away from ${me_behalf} and others": away_people
        show if: trial_court_index == -1
      - "Stop contacting ${me_behalf} and others whether in person, by phone, by e-mail, by note or by sending messages through other people": no_contact
        show if: trial_court_index == -1
      - "Stay away from the locations of ${my_behalf} and others' work or school": away_places
        show if: trial_court_index == -1
      - "Stay away from ${my_behalf} and others' pets and property": away_property
        show if: trial_court_index == -1
      - "Stop contacting ${me_behalf} and others whether in person, by phone, by e-mail, by note or by sending messages through other people": no_contact
        show if: trial_court_index != -1
      - "Stay away from ${me_behalf} and others, as well as stay away from my and others' home, work, school, or daycare": away_places
        show if: trial_court_index != -1
      - "Not take, hide, or damage any of the ${my_behalf} or others' property or pets": away_people
        show if: trial_court_index != -1
  - In feet, how far away should ${other_parties[0].name.full(middle='full')} stay?: distance_state
    datatype: integer
    max: 999
    help: |
      For reference, one city block is around 300 to 400 feet.
    show if: 
      code: |
        trial_court_index != -1
    js show if: |
      val("protection_requested['away_places']") === true
  - In feet, how far away should ${other_parties[0].name.full(middle='full')} stay from you and others?: distance_people
    datatype: integer
    max: 999
    help: |
      For reference, one city block is around 300 to 400 feet.
    show if: 
      code: |
        trial_court_index == -1  
    js show if: |  
      val("protection_requested['away_people']") === true
  - In feet, how far away should ${other_parties[0].name.full(middle='full')} stay from the locations?: distance_places
    datatype: integer
    max: 999
    help: |
      For reference, one city block is around 300 to 400 feet.
    show if: 
      code: |
        trial_court_index == -1  
    js show if: |  
      val("protection_requested['away_places']") === true
---
on change: 
  trial_court_index: |
    undefine('protection_requested')
---
template: stay_away_contact
subject: |
  **What do "stay away" and "contact" mean here?**
content: |
  **Stay Away**: to refrain from both physical presence and nonphysical contact with the survivor directly, indirectly, or through third parties who may or may not know of the order. "Nonphysical contact" includes, but is not limited to, telephone calls, mail, e-mail, fax, and written notes.

  **Contact**: includes any contact with the survivor, that is initiated or continued without the survivor’s consent, or that is in disregard of the survivor’s expressed desire that the contact be avoided or discontinued, including but not limited to being in the physical presence of the survivor; appearing within the sight of the survivor; approaching or confronting the survivor in a public place or on private property; appearing at the workplace or residence of the survivor; entering onto or remaining on property owned, leased, or occupied by the survivor; or placing an object on, or delivering an object to, property owned, leased, or occupied by the survivor.
---
id: protected place types
question: |
  What kinds of places ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?
subquestion: |
  **Caution:** ${capitalize(you_behalf)} must tell ${other_parties[0].name.full(middle='full')} the address of any place ${you_they} ${want_wants} them to stay away from. If ${you_they} do not want ${other_parties[0].name.full(middle='full')} to know an address, ${you_they} should not pick that location.

  If ${you_they} want to include the name of a crisis center, click **Other**.
fields:
  - no label: protected_place_types
    datatype: checkboxes
    none of the above: False
    choices:
      - Home
      - Workplace
      - School
      - Daycare: day_care
      - Other
---
id: safe home address
question: |
  What is ${your_behalf} home address?
subquestion: |
  You answered earlier that ${you_behalf} ${want_wants} to hide ${your_their} real address.
  
  If ${you_behalf} ${do_does} not want ${other_parties[0].name.full(middle='full')} to know ${your_their} home address, do not list it here. You may want to click **Back** and not include ${your_their} home as a protected place.
  
  The address entered here will be printed on a form telling ${other_parties[0].name.full(middle='full')} where they cannot go.
fields:
  - Street address: home.address
    address autocomplete: True
  - Address line 2: home.unit
    required: False
  - City: home.city
  - State: home.state
    code: |
      states_list()
    default: IL      
  - ZIP code: home.zip
---
id: other places
question: |
  What other places ${do_does} ${you_behalf} want the court to order ${other_parties[0].name.full(middle='full')} to stay away from?
subquestion: |
  For example, you could name a store ${you_behalf} ${go_goes} to regularly or a crisis center that is helping ${you_them}.
  
  Include any addresses if ${you_behalf} ${know_knows} them. If ${you_they} do not want ${other_parties[0].name.full(middle='full')} to know the addresses, do not list them here.
  
  The address entered here will be printed on a form telling ${other_parties[0].name.full(middle='full')} where they cannot go.
fields:
  - Name or type of place, and address (if known): other_places
    maxlength: |
      % if trial_court_index == -1:
      150
      % else:
      300
      % endif
    rows: 5
    input type: area
---
id: workplace name workplace address
question: |
  What is the name and address of the workplace ${you_behalf} ${want_wants} ${other_parties[0].name.full(middle='full')} to stay away from?
subquestion: |
  If ${you_behalf} ${do_does} not want ${other_parties[0].name.full(middle='full')} to know this work address, do not list it here. You may want to click **Back** and not include a workplace as a protected place.
  
  The address entered here will be printed on a form telling ${other_parties[0].name.full(middle='full')} where they cannot go.
fields:
  - Workplace name: protected_workplace.name
    maxlength: 25
  - Street address: protected_workplace.address
    address autocomplete: True
  - Address line 2: protected_workplace.unit
    required: False
  - City: protected_workplace.city
  - State: protected_workplace.state
    code: |
      states_list()
    default: IL      
  - ZIP code: protected_workplace.zip
---
id: school name school address
question: |
  What is the name and address of the school ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?
subquestion: |
  If ${you_behalf} ${do_does} not want ${other_parties[0].name.full(middle='full')} to know this school address, do not list it here. You may want to click **Back** and not include a school as a protected place.
  
  The address entered here will be printed on a form telling ${other_parties[0].name.full(middle='full')} where they cannot go.
fields:
  - School name: protected_school.name
    maxlength: 30
  - Street address: protected_school.address
    address autocomplete: True
  - Address line 2: protected_school.unit
    required: False
  - City: protected_school.city
  - State: protected_school.state
    code: |
      states_list()
    default: IL      
  - ZIP code: protected_school.zip
---
id: day care name day care address
question: |
  What is the name and address of the daycare ${you_behalf} ${want_wants} ${other_parties[0].name.full(middle='full')} to stay away from?
subquestion: |
  If ${you_behalf} ${do_does} not want ${other_parties[0].name.full(middle='full')} to know this daycare address, do not list it here. You may want to click **Back** and not include a daycare as a protected place.
  
  The address entered here will be printed on a form telling ${other_parties[0].name.full(middle='full')} where they cannot go.
fields:
  - Daycare name: protected_day_care.name
    maxlength: 30
  - Street address: protected_day_care.address
    address autocomplete: True
  - Address line 2: protected_day_care.unit
    required: False
  - City: protected_day_care.city
  - State: protected_day_care.state
    code: |
      states_list()
    default: IL      
  - ZIP code: protected_day_care.zip
---
id: school with perpetrator
question: |
  Do ${you_behalf} and ${other_parties[0].name.full(middle='full')} go to the same school?
fields:
  - no label: same_school
    datatype: yesnoradio
---
id: prohibit school which school
question: |
  ${capitalize(do_does)} ${you_behalf} want the court to prohibit ${other_parties[0].name.full(middle='full')} from attending the school ${you_behalf} ${go_goes} to?
fields:
  - no label: prohibit_school
    datatype: yesnoradio
  - Which school?: which_school
    show if: prohibit_school
    datatype: radio
    choices:
      - ${protected_school.on_one_line(bare=True)}: protected_school
      - Other: other_school
  - Other school name: other_school.name
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
  - Street address: other_school.address
    address autocomplete: True
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
  - Address line 2: other_school.unit
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
    required: False
  - City: other_school.city
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
  - State: other_school.state
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
    code: |
      states_list()
    default: IL      
  - ZIP code: other_school.zip
    js show if: |
        val("prohibit_school") === true && val("which_school") === "other_school"
---
id: perpetrator anything else
question: |
  ${capitalize(do_does)} ${you_behalf} want the court to make ${other_parties[0].name.full(middle='full')} to do or stop doing anything else?
fields: 
  - no label: other_parties[0].anything_else
    datatype: yesnoradio
  - What ${do_does} ${you_they} want ${other_parties[0].name.full(middle='full')} to do or stop doing?: other_parties[0].what_else
    input type: area
    maxlength: 280
    rows: 9
    show if:
      code: |
        trial_court_index != -1
    js show if: |
      val('other_parties[0].anything_else') === true
  - What ${do_does} ${you_they} want ${other_parties[0].name.full(middle='full')} to do or stop doing?: other_parties[0].what_else
    input type: area
    maxlength: 140
    rows: 5
    show if:
      code: |
        trial_court_index == -1
    js show if: |
      val('other_parties[0].anything_else') === true
---
id: no protection chosen
event: other_parties[0].no_protection_chosen
question: |
  Sorry
subquestion: |
  You have not chosen to ask for any of the protections a Civil No Contact Order can give you.
  
  If you have made a mistake, click **Back.**
buttons:
  - Exit: exit
  - Restart: restart
---
id: additional service information cook
question: |
  What other information will help the sheriff deliver court papers to ${other_parties[0].name.full(middle="full")}?
subquestion: |
  You can add things like:
  
  * Best days and times to serve court papers,
  * Details about the places where ${other_parties[0].name.full(middle="full")} can be found, and
  * Information about other people at those locations that can help find ${other_parties[0].name.full(middle="full")}.

  This will not appear on the forms that will be filed with the court. It goes on the Confidential Protective Order Information Sheet for the Sheriff.
fields:
  - no label: service_information
    input type: area
    rows: 7
    maxlength: 400
    required: False
---
id: signature
question: |
  Do you want to add your e-signature to your forms?
subquestion: |
  This program can put "**/s/ ${users[0].name.full(middle='full')}**" where you would sign your name. The court will accept this as your signature.
  
  If you do not add your **{e-signature}** now, you must sign your forms before you file them.
  
  <div class="alert alert-info ilao-info" role="alert">
    <h6 class="alert-heading">What it means to sign your forms</h6>
    <p>By signing your <i>Petition for Civil No Contact Order</i>, you are certifying that:
  <p>
  <p><ul>
  <li>You read the document,</li>
  <li>You believe it to be true and correct, and</li>
  <li>You are not filing it for an improper purpose.</li>
  </ul><p>
  <p>See the <a href="https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm"><b>Code of Civil Procedure, 735 ILCS 5/1-109</b></a> for more information.</p>
  </div>
field: e_signature
choices:
  - Yes: True
  - No, I will sign my forms later.: False
terms:
  - "e-signature": |
      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature.
---
reconsider: True
code: |
  minors_protected.clear()
  adults_protected.clear()
  if others_protected.there_are_any:
    for other in others_protected:
      if other.is_minor:
        minors_protected.append(other)
      else:
        adults_protected.append(other)
  minors_protected.there_is_another = False
  adults_protected.there_is_another = False
  if minors_protected.number_gathered() > 0:
    child_list = minors_protected.full_names()
  if adults_protected.number_gathered() > 0:
    adult_list = adults_protected.full_names()
  adult_minor_sorting = True
---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it may take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  [NEWLINE]
---
id: perpetrator gender cook
question: |
  What is ${other_parties[0].name.full(middle="full")}'s sex and gender identity?
subquestion: |
  This information is used to help law enforcement identify ${other_parties[0].name.full(middle="full")} and enforce the Civil No Contact Order. If you do not know this information, you can leave it blank.
fields:
  - Sex (will be public, used by any law enforement): other_parties[0].cook_sex
    datatype: radio
    required: False
    choices:
      - Male: Male
      - Female: Female
      - Other: other
  - ${other_parties[0].name.full(middle="full")}'s sex (will be public, used by any law enforement): other_parties[0].cook_sex_other
    maxlength: 20
    required: False
    show if:
      variable: other_parties[0].cook_sex
      is: "other"
  - Sex assigned at birth (confidential, used by sheriff only): respondent_sex_at_birth
    datatype: radio
    required: False
    choices:
      - Male: male
      - Female: female
    help: |
      Sex assigned at birth refers to the sex or gender marker on ${other_parties[0].name.full(middle="full")}'s original birth certificate. If they were born intersex, you may want to mention that in gender/other.
  - Gender identity (confidential, used by sheriff only): other_parties[0].cook_gender
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - Male: male
      - Female: female
      - Transgender woman / Transfeminine: transfem
      - Transgender man / Transmasculine: transmasc
      - Nonbinary / Gender non-conforming: nonbinary
      - Other: other
  - ${other_parties[0].name.full(middle="full")}'s gender identity (confidential, used by sheriff only): respondent_cook_gender_other
    maxlength: 20
    required: False
    show if:
      variable: other_parties[0].cook_gender['other']
      is: True
---
id: perpetrator gender statewide
question: |
  What gender is ${other_parties[0].name.full(middle='full')}?
subquestion: |
  This information is used to help enforce the Civil No Contact Order.
  
  If you do not know, you can just click **Next**.
fields:
  - Gender: other_parties[0].state_gender
    input type: radio
    choices:
      - Male
      - Female
      - Other
    required: False
  - Other: other_parties[0].state_other_gender
    maxlength: 20
    required: False
    show if: 
      variable: other_parties[0].state_gender
      is: "Other"  
---
id: perpetrator race perpetrator skin tone
question: |
  What race is ${other_parties[0].name.full(middle='full')}?
subquestion: |
  This information is used to help enforce the Civil No Contact Order.
  
  If you do not know, you can leave this blank.
fields:
  - Race: other_parties[0].race
    input type: radio
    required: False
    choices:
      - Asian: Asian
      - Black: Black
      - Hispanic: Hispanic
      - Latino: Latino
      - Middle Eastern: Middle Eastern 
      - Native American: Native American
      - Native Hawaiian: Native Hawaiian
      - North African: North African
      - Pacific Islander: Pacific Islander
      - White: White
      - 2 or more races: Multiracial
      - Other: Other
  - Other: respondent_race_other
    maxlength: 20
    show if: 
      variable: other_parties[0].race
      is: "Other"  
---
id: perpetrator any other names
question: |
  Has ${other_parties[0].name.full(middle='full')} gone by any other names?
subquestion: |
  If you know of any old legal name, nickname, or alias that ${other_parties[0].name.full(middle='full')} has used, click **Yes**.
fields:
  - no label: other_parties[0].has_alias
    datatype: yesnomaybe
  - Other names used by ${other_parties[0].name.full(middle="full")}:: other_parties[0].alias_names
    input type: area
    rows: 3
    maxlength: 120
    show if: other_parties[0].has_alias
    help: |
      This could be a name from an earlier marriage or a nickname. If there is more than one, separate by commas.
---
id: perpetrator ssn
question: |
  What are the last four digits of ${other_parties[0].name.full(middle='full')}'s Social Security Number?
subquestion: |
  This information is used to help identify ${other_parties[0].name.full(middle='full')}.

  If you do not know, you can leave this blank.
fields:
  - Last 4 digits of SSN: other_parties[0].ssn
    maxlength: 4
    required: False
---
depends on:
  - knows_respondent_dob
  - other_parties[0].birthdate
code: |
  if knows_respondent_dob == "exact":
    if other_parties[0].age_in_years() < 18:
      respondent_is_minor = True
    else:
      respondent_is_minor = False
  respondent_age_logic = True
---
id: respondent is minor
question: |
  Is ${other_parties[0].name.full(middle='full')} under 18 years old?
fields:
  - no label: respondent_is_minor
    datatype: yesnomaybe
---
id: parents or guardians
question: |
  Does ${other_parties[0].name.full(middle='full')} have parents or guardians?
field: parents_or_guardians
choices:
  - Parents
  - Guardians
  - I don't know: none
---
sets:
    - parents_guardians[i].name.first
    - parents_guardians[i].name.last
    - parents_guardians[i].name.middle
    - parents_guardians[i].name.suffix
id: parents guardians name
question: |
  % if parents_or_guardians == "Parents":
  What is the name of ${other_parties[0].name.full(middle='full')}'s ${ordinal(i)} parent?
  % else:
  What is the name of ${other_parties[0].name.full(middle='full')}'s ${ordinal(i)} guardian?
  % endif
fields:
  - code: |
      parents_guardians[i].name_fields()
---
id: another parents guardians
question: |
  % if parents_or_guardians == "Parents":
  Does ${other_parties[0].name.full(middle='full')} have another parent?
  % else:
  Does ${other_parties[0].name.full(middle='full')} have another guardian?
  % endif
subquestion: |
  So far you have told us about ${parents_guardians.full_names()}.
fields:
  - no label: parents_guardians.there_is_another
    datatype: yesnoradio
---
code: |
  if parents_guardians.number_gathered() >= 2:
    parents_guardians.there_is_another = False
---
id: know respondent birthdate
question: |
  Do you know ${other_parties[0].name.full(middle="full")}'s birthdate?
subquestion: |
  If you do not know their birthday but can guess their age, you can select "I know some of it" and note their age there. For example, if you think they are around 30 years old, you could write "About 30 years ago."
fields:   
  - no label: knows_respondent_dob
    datatype: radio
    choices:
      - Yes, I will enter the date.: exact
      - I know some of it.: some
        help: |
          For example, "June 3rd" or "Summer of 1990."
      - I don't know it.: idk
        help: |
          % if trial_court_index == -1:
          You can update the Cook County Sheriff's office when you have this information. Email them anytime at ccso.protectiveorders@ccsheriff.org or call them at 312-603-2134 or 312-603-3340 (Monday through Friday, 8AM to 5PM).
          % else:
          You may want to update the sheriff's office when you have this information.
          % endif
  - ${other_parties[0].name.full(middle="full")}'s date of birth: other_parties[0].birthdate
    datatype: birthdate
    max: ${ today().format("yyyy-MM-dd") }
    show if: 
      variable: knows_respondent_dob
      is: exact
  - What you know about ${other_parties[0].name.full(middle="full")}'s date of birth: other_parties[0].date_info
    maxlength: 25
    show if:
      variable: knows_respondent_dob
      is: some
---
id: cook county physical characteristics
question: |
  Tell us about ${other_parties[0].name.full(middle="full")}'s appearance
subquestion: |
  This information is used to help enforce the Civil No Contact Order.
  
  Enter any information you know.
fields:
  - Height (feet): other_parties[0].height_feet
    datatype: integer
    required: False
    maxlength: 1
    min: 2
    max: 8
    grid: 6
    help: |
      Example: 5
  - Height (inches): other_parties[0].height_inches
    datatype: integer
    required: False
    maxlength: 2
    min: 0
    max: 11
    grid: 6
    help: |
      Example: 8
  - Weight (pounds): other_parties[0].weight
    datatype: integer
    required: False
    min: 1
    max: 1500
    maxlength: 4
    help: |
      Example: 170
  - Skin color: other_parties[0].skin
    required: False
    datatype: radio
    choices: 
      - Very light: Very light
      - Light: Light
      - Light brown: Light brown
      - Olive: Olive
      - Brown: Brown
      - Dark brown: Dark brown
      - Other: other
  - ${other_parties[0].name.full(middle="full")}'s skin color: respondent_skin_other
    maxlength: 20
    show if:
      variable: other_parties[0].skin
      is: 'other'
  - Hair color: other_parties[0].hair
    maxlength: 20
    required: False
    help: |
      Examples: brown, black, blond, gray, bald or shaved
  - Eye color: other_parties[0].eyes
    maxlength: 20
    required: False
    help: |
      Examples: brown, blue, hazel, green
  - Does ${other_parties[0].name.full(middle="full")} wear glasses?: other_parties[0].glasses
    datatype: radio
    required: False
    choices: 
      - Yes: Yes
      - Sometimes: Sometimes
      - No: No
---
id: perpetrator notable features
question: |
  What are ${other_parties[0].name.full(middle='full')}'s notable features?
subquestion: |
  Scars, tattoos, or birthmarks are all notable features.
  
  If you do not know any, you can leave this blank. 

  % if trial_court_index == -1:
  The forms have space for about 100 characters including spaces.
  % else:
  The forms have space for about 150 characters including spaces.
  % endif
fields:
  - Features: other_parties[0].features
    input type: area
    maxlength: 100
    show if:
      code: |
        trial_court_index == -1
    rows: 2
    required: False
    help: |
      The forms have space for about 100 characters including spaces.
  - Features: other_parties[0].features
    input type: area
    maxlength: 150
    rows: 3
    required: False
    show if: 
      code: |
        trial_court_index != -1
    help: |
      The forms have space for about 150 characters including spaces.
---
id: perpetrator in jail
question: |
    Is ${other_parties[0].name.full(middle='full')} incarcerated?
subquestion: |
    **Incarcerated** means "in prison" or "in jail."
fields:
  - no label: respondent_jail_check
    datatype: yesnomaybe
  - Name of prison or jail: respondent_jail_name
    maxlength: 50
    required: False
    js show if:
      val('respondent_jail_check') === true
    help: |
      If you do not know the name of the jail, you may leave this blank.
---
id: perpetrator probation
question: |
  Is ${other_parties[0].name.full(middle="full")} on court-ordered probation?
fields:
  - no label: respondent_on_probation
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: idk
  - Probation in which county?: respondent_probation_county
    required: False
    maxlength: 40
    help: |
      Enter the state if outside Illinois.
    show if: 
      variable: respondent_on_probation
      is: "Yes"
---
id: perpetrator drivers license
question: |
  What is ${other_parties[0].name.full(middle='full')}'s driver's license number?
subquestion: |
  If you do not know or they do not have a driver's license, you can leave this blank.
fields:
  - Driver's license number: other_parties[0].drivers_license
    required: False
    maxlength: 20
---
id: perpetrator access to vehicle
question: |
  Does ${other_parties[0].name.full(middle='full')} have access to a vehicle?
fields:
  - no label: other_parties[0].has_vehicle
    datatype: yesnomaybe
---
id: perpetrator vehicle details
question: |
  Enter as much information as you can about ${other_parties[0].name.full(middle='full')}'s vehicle.
subquestion: |
  If ${other_parties[0].name.full(middle='full')} has more than one car, describe the car they use most often.

  If you do not know the answer to something, you can leave it blank.
fields:
  - Year: other_parties[0].vehicle_year
    required: False
    maxlength: 4
  - Make: other_parties[0].vehicle_make
    required: False
    maxlength: 30
    help: |
      This is the brand that made the vehicle. For example, Ford, Chevy, and Toyota are all makes.
  - Model: other_parties[0].vehicle_model
    required: False
    maxlength: 30
    help: |
      This is the vehicle's type. For example, Explorer, Suburban, and Camry are all models.
  - Color: other_parties[0].vehicle_color
    maxlength: 30
    required: False
  - License plate number: other_parties[0].license_plate
    maxlength: 10
    required: False
  - State: other_parties[0].vehicle_state
    required: False
    code: |
      states_list()
---
id: perpetrator another number check
question: |
  Do you know another number that can identify ${other_parties[0].name.full(middle='full')}?
subquestion: |
  This could be a passport number, a military ID number, or something similar.
fields:
  - no label: other_parties[0].another_number_check
    datatype: yesnoradio
  - Number: other_parties[0].another_number
    show if: other_parties[0].another_number_check
    maxlength: 30
  - Describe the ID number: other_parties[0].another_number_description
    show if: other_parties[0].another_number_check
    maxlength: 40
    help: |
      For example, this could be "military ID number" or "passport number."
---
id: respondent social media
question: |
  Is ${other_parties[0].name.full(middle="full")} active on social media?
subquestion: |
  If you know about ${other_parties[0].name.full(middle="full")}'s accounts, this could help the sheriff find them.
  
  This information **will not** appear on public court documents.
fields:
  - Active on social media?: respondent_on_social_media
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
  - List their accounts: respondent_social_media_accounts
    input type: area
    rows: 5
    maxlength: 180
    help: |
      Enter as much information as you can including app, website, and username if you know it.
    show if:
      variable: respondent_on_social_media
      is: 'Yes'
---
id: perpetrator phone number perpetrator email address
question: |
  What is ${other_parties[0].name.full(middle='full')}'s contact information?
subquestion: |
  If you do not know, you can leave this blank.
fields:
  - Phone number: other_parties[0].phone_number
    datatype: al_international_phone
    required: False
  - Cell phone: other_parties[0].mobile_number
    datatype: al_international_phone
    required: False
    show if:
      code: |
        trial_court_index == -1
  - Email address: other_parties[0].email_address
    datatype: email
    required: False
---
id: perpetrator any additional contact info
question: |
  Does ${other_parties[0].name.full(middle='full')} have another phone number or email address?
subquestion: |
  So far you have told us about:
  
  % if other_parties[0].phone_number != "":
  * ${other_parties[0].name.full(middle="full")}'s phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s phone: None entered
  % endif
  % if trial_court_index == -1 and other_parties[0].mobile_number != "":
  * ${other_parties[0].name.full(middle="full")}'s mobile phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % endif
  % if other_parties[0].email_address != "":
  * ${other_parties[0].name.full(middle="full")}'s email: ${ other_parties[0].email_address }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s email: None entered
  % endif
fields:
  - no label: other_parties[0].bonus_contact_info
    datatype: yesnoradio
---
id: perpetrator alt email phone
question: |
  What is ${other_parties[0].name.full(middle='full')}'s additional contact information?
subquestion: |
  So far you have told us about:
  
  % if other_parties[0].phone_number != "":
  * ${other_parties[0].name.full(middle="full")}'s phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s phone: None entered
  % endif
  % if trial_court_index == -1 and other_parties[0].mobile_number != "":
  * ${other_parties[0].name.full(middle="full")}'s mobile phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % endif
  % if other_parties[0].email_address != "":
  * ${other_parties[0].name.full(middle="full")}'s email: ${ other_parties[0].email_address }
  % else:
  * ${other_parties[0].name.full(middle="full")}'s email: None entered
  % endif
fields:
  - Phone number: other_parties[0].alt_phone
    datatype: al_international_phone
    required: False
  - Email address: other_parties[0].alt_email
    datatype: email
    required: False
---
id: perpetrator address known
question: |
  Do you know ${other_parties[0].name.full(middle='full')}'s current home address?
fields:
  - no label: other_parties[0].address_known
    datatype: yesnoradio
---
id: perpetrator last known address
question: |
  Do you know ${other_parties[0].name.full(middle="full")}'s last known address?
fields:
  - no label: other_parties[0].last_address_known
    datatype: yesnoradio
---
id: unknown address note
continue button field: unknown_address_note
question: |
  Note about the unknown address
subquestion: |
  If you do not know ${other_parties[0].name.full(middle='full')}'s address, you may still file. However, you may need to show the court that you tried to find their address. 
  
  You can do this by filing a written statement called an “affidavit” telling how you tried to find ${other_parties[0].name.full(middle='full')}'s address. If you need to file one of these, the judge or court clerk should provide it.
---
id: perpetrator current address
question: |
  % if other_parties[0].address_known:
  What is ${other_parties[0].name.full(middle='full')}'s current home address?
  % else:
  What is ${other_parties[0].name.full(middle='full')}'s last known address?
  % endif
fields:
  - Street address: other_parties[0].address.address
    address autocomplete: True
  - Address line 2: other_parties[0].address.unit
    required: False
  - City: other_parties[0].address.city
  - State: other_parties[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: other_parties[0].address.zip
---
id: perpetrator currently employed
question: |
  Do you know if ${other_parties[0].name.full(middle='full')} is employed?
fields:
  - no label: other_parties[0].has_job
    datatype: yesnoradio
---
#what if they have more than one employer?
id: perpetrator employer
question: |
  Enter as much information as you can about ${other_parties[0].name.full(middle='full')}'s employer.
subquestion: |
  If you do not know who ${other_parties[0].name.full(middle='full')}'s employer is, you can leave this blank.
fields:
  - Employer name: other_parties[0].employer_name
    required: False
    maxlength: 30
  - Occupation or type of work: respondent_work_type
    required: false
    help: |
      Describe their position, job title, or role where they work. Examples: Manager, cook, cashier
    maxlength: 30
  - Work days and hours: other_parties[0].work_hours
    required: False
    maxlength: 30
    help: |
      If you don't know the exact days and hours, you can say something like "weekdays" or "nights."
  - Street address: other_parties[0].employer_address.address
    address autocomplete: True
    required: False
  - Address line 2: other_parties[0].employer_address.unit
    required: False
  - City: other_parties[0].employer_address.city
    required: False
  - State: other_parties[0].employer_address.state
    required: False
    code: |
      states_list()  
  - ZIP code: other_parties[0].employer_address.zip
    required: False
---
id: respondent caution
question: |
  Are there reasons to use caution when approaching ${other_parties[0].name.full(middle="full")}?
subquestion: |
  The sheriff or someone will have to approach ${other_parties[0].name.full(middle="full")} to serve them court papers.
  
  Check all that apply.
fields:
  - ${other_parties[0].name.full(middle="full")}: caution_reasons
    datatype: checkboxes
    none of the above: True
    choices:
      - Has a history of mental illness.: illness
        show if: trial_court_index == -1
      - Is now or has been suicidal.: suicide
      - Is likely to be under the influence of alcohol.: alcohol
        show if: trial_court_index == -1
      - Is likely to be under the influence of drugs.: drugs
        show if: trial_court_index == -1
      - Is likely to carry a weapon.: armed
        show if: trial_court_index == -1
      - Is likely armed or dangerous.: armed
        show if: trial_court_index != -1
      - Has weapons in the home.: home
        show if: trial_court_index == -1        
  - Type and location of weapons: other_parties[0].weapons_info
    required: False
    input type: area
    rows: 5
    maxlength: 180
    show if: 
      code: |
        trial_court_index == -1
    js show if: |
     (val("caution_reasons['armed']") == true || val("caution_reasons['home']") == true)
---
id: other cases
question: |
  Other court cases with ${other_parties[0].name.full(middle="full")}
subquestion: |
  Are there now, or have there ever been, any other court cases (civil or criminal) involving ${other_parties[0].name.full(middle="full")} and you or other people you want to protect in this Order?
  
  Examples include:
  
  * Divorce
  * Custody
  * Child support
  * Paternity or parentage
  * Parenting time
  * Guardianship
  * Adoption
  * Abuse and neglect
  * Domestic battery
  * Violation of an Order of Protection.
  
  **Note:** do not include other protective orders.
fields:
  - Other court cases?: has_other_cases
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know
---
id: any previous cook cases
question: |
  ${capitalize(have_has)} ${you_behalf} filed any divorce or parentage cases with ${other_parties[0].name.full(middle="full")} in Cook County before?
subquestion: |
  This will help the court clerk in Cook County assign your case to the correct location. If ${you_they} were involved in more than one, choose the most recent.
fields:
  - no label: previous_cook_case_type
    datatype: radio
    choices:
      - ${capitalize(i_behalf)} was in an earlier **divorce** case with ${other_parties[0].name.full(middle="full")}.: divorce
      - ${capitalize(i_behalf)} was in an earlier **parentage** case with ${other_parties[0].name.full(middle="full")} involving children we had together.: parentage
      - No earlier divorce or parentage cases were filed in Cook County.: none
  - Date case was filed: previous_cook_case_date
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
  - Case number: previous_cook_case_number
    maxlength: 24
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
  - Name of judge: previous_cook_case_judge
    maxlength: 45
    required: False
    js show if: |
      val("previous_cook_case_type") === "divorce" || val("previous_cook_case_type") === "parentage" 
---
id: other cases detail
question: |
  % if i != 0:
  Tell us about the ${ ordinal(i) } court case
  % else:
  Tell us about the court case
  % endif
fields:
  - Names of people involved (separate by commas): other_cases[i].name.text
    maxlength: 100
    input type: area
    rows: 2
  - State: other_cases[i].state
    code: |
      states_list()
  - County: other_cases[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_cases[i].state') === "IL" 
  - County: other_cases[i].county
    maxlength: 25
    js show if: |
      val('other_cases[i].state') != "IL"
  - Year: other_cases[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
---
id: more cases
question: |
  Is there another court case you would like to list?
subquestion: |
  You can enter up to 2 other cases.
  
  So far you have told us about the case from ${other_cases[i].year} filed in ${end_in_county(other_cases[i].county)}, ${other_cases[i].state}.
field: other_cases.there_is_another
choices:
  - Yes: True
  - No: False
---
code: |
  other_cases[i].state
  other_cases[i].county
  other_cases[i].year
  other_cases[i].complete = True
---
code: |
  if previous_cook_case_type == "none":
    if other_cases.number_gathered() >= 2:
      other_cases.there_is_another = False
  else:
    if other_cases.number_gathered() >= 1:
      other_cases.there_is_another = False
---
code: |
  if other_ops.number_gathered() >= 2:
    other_ops.there_is_another = False
---
id: perpetrator any order of protection
question: |
  Other protective orders
subquestion: |
  Is there now, or has there ever been, a protective order in any state against ${other_parties[0].name.full(middle="full")} involving you or other people you want to protect in this Order?
fields:
  - no label: has_other_ops
    datatype: yesnomaybe
---
id: other ops detail
question: |
  Tell us about the ${ ordinal(i) } protective order
fields:
  - Names of people involved (separate by commas): other_ops[i].name.text
    maxlength: 100
    input type: area
    rows: 2
  - State: other_ops[i].state
    code: |
      states_list()
  - County: other_ops[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_ops[i].state') === "IL" 
  - County: other_ops[i].county
    maxlength: 25
    js show if: |
      val('other_ops[i].state') != "IL"
  - Year: other_ops[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
---
id: more ops
question: |
  Is there any another protective order you would like to list?
subquestion: |
  You can enter up to 2 protective orders.
  
  So far you have told us about the protective order from ${other_ops[i].year} filed in ${end_in_county(other_ops[i].county)}, ${other_ops[i].state}.
field: other_ops.there_is_another
choices:
  - Yes: True
  - No: False

---
id: ops debug
continue button field: ops_debug
question: |
  Other OP Debug
---
code: |
  other_ops[i].name.text
  other_ops[i].state
  other_ops[i].county
  other_ops[i].year
  other_ops[i].complete = True
---
code: |
  if other_ops.number_gathered() >= 2:
    other_ops.there_is_another = False
---
id: service method
question: |
  Who do you want to deliver court papers to ${other_parties[0].name.full(middle="full")}?
subquestion: |
  This is called service. In Illinois, **Sheriffs usually serve CNCOs.**
  
  Note: There may be a charge for a special process server or a licensed private detective. Read ILAO's article about [**serving a summons**](https://www.illinoislegalaid.org/legal-information/serving-summons) to learn more about your service options.
fields:
  - no label: service_method
    datatype: radio
    choices:
      - Sheriff (most common): sheriff
      - Special process server: sps
      - Licensed private detective: detective
      - I don't know. I will decide and complete the Summons later.: idk
---
id: out of state county
question: |
  In which county can the sheriff find ${other_parties[0].name.full(middle="full")}?
subquestion: |
  % if other_parties[0].which_address != "add_service_address" or other_parties[0].service_address.address != "":
  You said the sheriff can serve court papers on ${other_parties[0].name.full(middle="full")} at:
  
  % if other_parties[0].which_address == "add_service_address":
  * ${ other_parties[0].service_address.on_one_line(bare=True) }
  % elif other_parties[0].which_address == "home_address":
  * ${other_parties[0].address.on_one_line(bare=True)}
  % elif other_parties[0].which_address == "employer_address":
  * ${other_parties[0].employer_address.on_one_line(bare=True)}
  % endif
  % endif
  
  Enter the county below so the sheriff can find ${other_parties[0].name.full(middle="full")}.
  
  ${ collapse_template(county_lookup_help) }
fields:
  - County where ${other_parties[0].name.full(middle="full")} can be served: service_county
    maxlength: 40
    required: False
---
template: county_lookup_help
subject: |
  **How do I look up the county?**
content: |  
  You can use this **[City-to-County Finder](https://www.statsamerica.org/CityCountyFinder/)** to find the county.
---
reconsider: True
code: |
  service_list = []
  if other_parties[0].address_known:
    service_list.append( { "home_address": other_parties[0].name.full(middle="full") + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  else:
    if other_parties[0].last_address_known == True:
      service_list.append( { "home_address": other_parties[0].name.full(middle="full") + "'s last known address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].has_job and other_parties[0].employer_address.address != "":
    service_list.append({ "employer_address": other_parties[0].name.full(middle="full")+ "'s work address (" + other_parties[0].employer_address.on_one_line(bare=True) + ")" })
  service_list.append({ "add_service_address": "An address I will enter" })
---
id: perpetrator which address
question: |
  Where should court papers be delivered to ${other_parties[0].name.full(middle='full')}?
subquestion: |
  The court will need an address where they can deliver the court forms to ${other_parties[0].name.full(middle='full')}. If necessary, you could try an Internet search to find one. You can ask for a CNCO without knowing their address, but that may make it harder to get the cnco.
fields: 
  - no label: other_parties[0].which_address
    input type: radio
    code: service_list
  - Street address: other_parties[0].service_address.address
    address autocomplete: True
    required: False
    show if:
      variable: other_parties[0].which_address
      is: "add_service_address" 
  - Address line 2: other_parties[0].service_address.unit
    required: False
    show if:
      variable: other_parties[0].which_address
      is: "add_service_address" 
  - City: other_parties[0].service_address.city
    required: False
    show if:
      variable: other_parties[0].which_address
      is: "add_service_address" 
  - State: other_parties[0].service_address.state
    required: False
    show if:
      variable: other_parties[0].which_address
      is: "add_service_address" 
    code: |
      states_list()  
  - ZIP code: other_parties[0].service_address.zip
    required: False
    show if:
      variable: other_parties[0].which_address
      is: "add_service_address" 
validation code: |
  if other_parties[0].which_address == "add_service_address":
    service_state = other_parties[0].service_address.state
  elif other_parties[0].which_address == "home_address":
    service_state = other_parties[0].address.state
  elif other_parties[0].which_address == "employer_address":
    service_state = other_parties[0].employer_address.state
---
id: list bonus service check
question: |
  Do you want to list another place where court papers could be delivered to ${other_parties[0].name.full(middle='full')}?
fields:
  - no label: other_parties[0].bonus_service_check
    datatype: yesnoradio
---
reconsider: True
code: |
  alt_service_list = []
  if other_parties[0].which_address != "home_address":
    if other_parties[0].address_known:
      alt_service_list.append( { "home_address": other_parties[0].name.full(middle="full") + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
    else:
      if other_parties[0].last_address_known == True:
        alt_service_list.append( { "home_address": other_parties[0].name.full(middle="full") + "'s last known address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if other_parties[0].has_job and other_parties[0].employer_address.address != "" and other_parties[0].which_address != "employer_address":
    alt_service_list.append({ "employer_address": other_parties[0].name.full(middle="full")+ "'s work address (" + other_parties[0].employer_address.on_one_line(bare=True) + ")" })
  alt_service_list.append({ "service_address": "An address I will enter" })
---
id: bonus service address
question: |
  Where else can the sheriff go to deliver court papers to ${other_parties[0].name.full(middle='full')}?
fields: 
  - no label: other_parties[0].which_bonus_address
    input type: radio
    code: alt_service_list
  - Street address: other_parties[0].bonus_service_address.address
    address autocomplete: True
    show if:
      variable: other_parties[0].which_bonus_address
      is: "service_address" 
  - Address line 2: other_parties[0].bonus_service_address.unit
    required: False
    show if:
      variable: other_parties[0].which_bonus_address
      is: "service_address" 
  - City: other_parties[0].bonus_service_address.city
    show if:
      variable: other_parties[0].which_bonus_address
      is: "service_address" 
  - State: other_parties[0].bonus_service_address.state
    show if:
      variable: other_parties[0].which_bonus_address
      is: "service_address" 
    code: |
      states_list()  
  - ZIP code: other_parties[0].bonus_service_address.zip
    show if:
      variable: other_parties[0].which_bonus_address
      is: "service_address"
---
reconsider: True
code: |
  any_minors = False
  any_adults = False
  if others_protected.there_are_any:
    if others_protected.number_gathered() > 0:
      for other in others_protected:
        if other.is_minor:
          any_minors = True
        else:
          any_adults = True
  check_ages = True
---
reconsider: True
code: |
  if protection_requested['away_places']:
    away_address_list.clear()
    away_school_daycare_list.clear()
    if protected_place_types['Home']:
      away_address_list.append(home.on_one_line(bare=True))
    if protected_place_types['Workplace']:
      workplace_text = protected_workplace.name
      workplace_text += ", " 
      workplace_text += protected_workplace.on_one_line(bare=True)
      away_address_list.append(workplace_text)
    if protected_place_types['School']:
      school_text = protected_school.name + ", " + protected_school.on_one_line(bare=True)
      away_address_list.append(school_text)
      away_school_daycare_list.append(school_text)
    if protected_place_types['day_care']:
      day_care_text = protected_day_care.name + ", " + protected_day_care.on_one_line(bare=True)
      away_address_list.append(day_care_text)
      away_school_daycare_list.append(day_care_text)
    away_address_list.there_is_another = False
  cook_stay_away_addresses = True
---
reconsider: True
code: |
  if protection_requested['away_places']:
    away_school_daycare_list.clear()
    
    if protected_place_types['School']:
      school_text = protected_school.name + ", " + protected_school.on_one_line(bare=True)
      away_school_daycare_list.append(school_text)
    if protected_place_types['day_care']:
      day_care_text = protected_day_care.name + ", " + protected_day_care.on_one_line(bare=True)
      away_school_daycare_list.append(day_care_text)

    away_school_daycare_list.there_is_another = False
  state_stay_away_addresses = True
---
id: not proper location
event: other_jurisdiction_location
question: |
  Sorry
subquestion: |
  You can file your case in the Illinois county:
  
  * Where you or the person you are filing for lives,
  * Where the person you are filing against lives, or
  * Where the abuse occurred.

  If Illinois is not the right place to ask for a Civil No Contact Order, you can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: jurisdiction
question: |
  Why do you want to file in ${ end_in_county(trial_court.address.county)}?
subquestion: |
  Check all that apply.
fields:
  - no label: jurisdiction_type
    datatype: checkboxes
    choices:
      - I or the person I am filing for lives in ${ trial_court.address.county } County.: I live here
      - The person I am filing against lives in ${ trial_court.address.county } County.: Respondent lives here
      - The abuse took place in ${ trial_court.address.county } County.: Abuse was here              
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your ${ form_name } forms, you must file them with the court clerk's office. This program **does not file** your ${ form_name } forms for you.
  
  The Civil No Contact Order does not take effect until the judge signs the order after a court hearing. If you are currently in danger, call 911.

  You can also download instructions at the end of this program. The instructions can guide you through filing your forms and going to court.
---
reconsider: True
code: |
  if others_protected.there_are_any:

    for index, other in enumerate(others_protected):
      if trial_court_index == -1:
        other.include_in_addendum = True
      else:
        if index > 1:
          other.include_in_addendum = True
        else:
          other.include_in_addendum = False
  for index, event in enumerate(abusive_acts):
    if trial_court_index == -1:
      if index > 0:
        event.include_in_addendum = True
      else:
        event.include_in_addendum = False
    else:
      if index > 0:
        event.include_in_addendum = True
      else:
        event.include_in_addendum = False
  addendum_check = True
---
id: get docs screen
question: |
  Download
subquestion: |    
  Your forms are ready. View and download your forms below. Click **:edit: Make changes** to fix any mistakes.

  This program **does not file** your ${ form_name } forms with the court. You will need to do this yourself.

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program **does not file** your ${ form_name } forms with the court. You will need to do this yourself.
  
  Thank you for using ILAO Easy Forms!
event: get_docs_screen
under: |
  % if not user_logged_in():
  
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [create](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=current_context().question_id, easy_form_variable=current_context().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Your forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---
objects:
  - cnco_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - cnco_petition: ALDocument.using(title="Verified Petition", filename="petition.pdf", has_addendum=False)
  - op_summons: ALDocument.using(title="Summons", filename="summons.pdf", has_addendum=False)
  - emergency_order: ALDocument.using(title="Emergency Civil No Contact Order (draft)", filename="emergency_order.pdf", has_addendum=False)
  - plenary_order: ALDocument.using(title="Plenary Civil No Contact Order (draft)", filename="plenary_order.pdf", has_addendum=False)
  - others_protected_addendum: ALDocument.using(title="Others protected addendum", filename="others_protected_addendum.pdf", has_addendum=False)
  - cnco_events_addendum: ALDocument.using(title="Abusive acts addendum", filename="cnco_events_addendum.pdf", has_addendum=False)
  - cook_e_order: ALDocument.using(title="Emergency Civil No Contact Order (draft)", filename="cook_scco__emergency_order.pdf", has_addendum=False)
  - cook_p_order: ALDocument.using(title="Plenary Civil No Contact Order (draft)", filename="cook_cnco_plenary_order.pdf", has_addendum=False)
  - sheriff_cover_sheet: ALDocument.using(title="Sheriff Information Cover Sheet", filename="sheriff_info_cover_sheet.pdf", has_addendum=False)
  - cook_cnco_petition: ALDocument.using(title="Verified Petition", filename="cook_cnco_petition.pdf", has_addendum=False)
  - efiling_exemption: ALDocument.using(title="E-filing exemption (optional)", filename="e-filing_exemption.pdf", has_addendum=False)
  - cook_dv_cover_sheet: ALDocument.using(title="Domestic Violence Cover Sheet", filename="cook_dv_cover_sheet.pdf", has_addendum=False)
  - cook_sheriff_info_sheet: ALDocument.using(title="Confidential Sheriff Information Sheet", filename="cook_sheriff_info_sheet.pdf", has_addendum=False)
---
objects: 
  - al_user_bundle: ALDocumentBundle.using(elements=[cnco_instructions, cook_dv_cover_sheet, petition_bundle, emergency_order_bundle, plenary_order_bundle, op_summons, sheriff_info_bundle, efiling_exemption], filename="civil_no_contact_order.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[cook_dv_cover_sheet, petition_bundle, emergency_order_bundle, plenary_order_bundle, op_summons, sheriff_info_bundle, efiling_exemption], filename="civil_no_contact_order.pdf", title="Order of protection")
---
objects:
  - petition_bundle: ALDocumentBundle.using(elements=[cnco_petition, cook_cnco_petition, others_protected_addendum, cnco_events_addendum], filename="petition.pdf", title="Verified Petition")
  - sheriff_info_bundle: ALDocumentBundle.using(elements=[sheriff_cover_sheet, cook_sheriff_info_sheet], filename="cook_sheriff_info_sheet.pdf", title="Confidential Sheriff Information Sheet")
---
objects:
 - emergency_order_bundle: ALDocumentBundle.using(elements=[emergency_order, cook_e_order, others_protected_addendum], filename="emergency_order.pdf", title="Emergency Civil No Contact Order (draft)")
 - plenary_order_bundle: ALDocumentBundle.using(elements=[plenary_order, cook_p_order, others_protected_addendum], filename="plenary_order.pdf", title="Plenary Civil No Contact Order (draft)")

---
code: |
  others_protected_addendum.enabled = False
  op_summons.enabled = True
  cnco_instructions.enabled = True
  efiling_exemption.enabled = True
  sheriff_cover_sheet.enabled = False
  sheriff_info_bundle.enabled = False
  cook_cnco_petition.enabled = False
  cnco_petition.enabled = False
  plenary_order.enabled = False
  plenary_order_bundle.enabled = False
  emergency_order.enabled = False
  emergency_order_bundle.enabled = False
  cook_e_order.enabled = False
  cook_p_order.enabled = False
  cook_dv_cover_sheet.enabled = False
  cook_sheriff_info_sheet.enabled = False
  petition_bundle.enabled = True
  
  if abusive_acts.number_gathered() > 1:
    cnco_events_addendum.enabled = True
  else:
    cnco_events_addendum.enabled = False
  
  if trial_court_index != -1:
    cnco_petition.enabled = True
    cook_dv_cover_sheet.enabled = False
    cook_sheriff_info_sheet.enabled = False
    sheriff_cover_sheet.enabled = False
  
    if order_type['plenary']:
      plenary_order.enabled = True
      plenary_order_bundle.enabled = True
    else:
      plenary_order.enabled = False
      plenary_order_bundle.enabled = False
    if order_type['emergency']:
      emergency_order.enabled = True
      emergency_order_bundle.enabled = True
    else:
      emergency_order.enabled = False
      emergency_order_bundle.enabled = False
    if others_protected.there_are_any:
      if others_protected.number_gathered() > 2:
        others_protected_addendum.enabled = True
  
  elif trial_court_index == -1:
    sheriff_cover_sheet.enabled = True
    sheriff_info_bundle.enabled = True
    cook_dv_cover_sheet.enabled = True
    cook_sheriff_info_sheet.enabled = True
    cook_cnco_petition.enabled = True
    if order_type['plenary']:
      cook_p_order.enabled = True
      plenary_order_bundle.enabled = True
    else:
      cook_p_order.enabled = False
      plenary_order_bundle.enabled = False
    if order_type['emergency']:
      cook_e_order.enabled = True
      emergency_order_bundle.enabled = True
    else:
      cook_e_order.enabled = False
      emergency_order_bundle.enabled = False
    #if others_protected.there_are_any:
    #  if others_protected.number_gathered() > 0:
    #    others_protected_addendum.enabled = True
    
---
attachment:
  variable name: cnco_petition[i]
  name: cnco_petition
  filename: cnco_petition
  skip undefined: True
  editable: False
  pdf template file: cnco_state_petition.pdf
  fields:
    - "circuit_court": ${court_circuit.upper()}
    - "filing_county": ${trial_court.address.county.upper()}
    - "user_name": ${users[0].name.full(middle='full')}
    - "behalf_of_name": |
        % if filing_for_whom != "me":
        ${users[1].name.full(middle='full')}
        % endif
    - "others_protected": ${others_protected.full_names() if others_protected.there_are_any else ""}
    - "protect_a_minor": ${True if filing_for_whom == "child" else False}
    - "protect_an_adult": ${True if filing_for_whom == "adult" else False}
    - "independent": ${True}
    - "respondent_has_parents": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Parents":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_has_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Guardians":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians != "none":
        ${parents_guardians.full_names()}
        % endif
    - "school_board_notice": ${prohibit_school if same_school else False}
    - "behalf_of_names": |
        % if others_protected.there_are_any and others_protected.number_gathered() > 0:
        ${ others_protected.full_names()}
        % endif
    - "abuser_name": ${ other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "user_address": |
        % if filing_for_whom == "me" or hide_address:
        ${users[0].address.on_one_line(bare=True)}
        % elif filing_for_whom == "me":
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${users[1].address.on_one_line(bare=True)}
        % endif
    - "use_safe_address": ${hide_address}
    - "other_protected_name_1": ${others_protected[0].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_1": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[0].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[0].address.on_one_line(bare=True)}
        % endif
        % endif
    - "other_protected_name_2": ${others_protected[1].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_2": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[1].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[1].address.on_one_line(bare=True)}
        % endif
        % endif
    - "respondent_name": ${other_parties[0].name.full(middle='full')}
    - "respondent_home_check": ${other_parties[0].last_address_known if other_parties[0].address_known == False else other_parties[0].address_known}
    - "respondent_home_address": ${other_parties[0].address.on_one_line(bare=True)}
    - "abuser_birth": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": |
        % if other_parties[0].state_gender == "Male":
        Male
        % elif other_parties[0].state_gender == "Female":
        Female
        % endif
    - "respondent_gender_other": |
        % if other_parties[0].state_gender == "Other":
        ${other_parties[0].state_other_gender}
        % endif
    - "respondent_race": ${"" if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_race_other": |
        % if other_parties[0].race == "Other":
        ${respondent_race_other}
        % endif
    - "respondent_height": ${(str(other_parties[0].height_feet) + "'" + str(other_parties[0].height_inches)  + "''") if str(other_parties[0].height_feet) != "0" else ""}
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_features": ${other_parties[0].features}
    - "respondent_employer_name": ${ other_parties[0].employer_name if other_parties[0].has_job else ""}
    - "respondent_work_check": ${True if other_parties[0].has_job and other_parties[0].employer_address.on_one_line(bare=True) != "" else False}
    - "respondent_work_address": ${ other_parties[0].employer_address.on_one_line(bare=True) if other_parties[0].has_job else ""}
    - "respondent_work_hours": ${other_parties[0].work_hours if other_parties[0].has_job else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_ssn": ${other_parties[0].ssn}
    - "respondent_dl": ${other_parties[0].drivers_license}
    - "respondent_plate": ${other_parties[0].license_plate if other_parties[0].has_vehicle else ""}
    - "respondent_other_id_number": ${other_parties[0].another_number if other_parties[0].another_number_check else ""}
    - "respondent_other_id_description": ${other_parties[0].another_number_description if other_parties[0].another_number_check else ""}
    - "just_armed": ${True if caution_reasons['armed'] and not caution_reasons['suicide'] else False}
    - "just_suicidal": ${True if caution_reasons['suicide'] and not caution_reasons['armed'] else False}
    - "armed_and_suicidal": ${True if caution_reasons['suicide'] and caution_reasons['armed'] else False}  
    - "date_incident_1": ${abusive_acts[0].name.text}
    - "time_incident_1": ${abusive_acts[0].time}
    - "location_incident_1": ${abusive_acts[0].place}
    - "description_incident_1": ${abusive_acts[0].description}
    - "additional_events": |
        % if abusive_acts.number_gathered() > 1:
        See attached page for additional incidents
        % endif
    - "petitioner_in_county": ${ jurisdiction_type['I live here']}
    - "respondent_in_county": ${ jurisdiction_type['Respondent lives here']}
    - "acts_in_county":  ${ jurisdiction_type['Abuse was here']}
    - "no_school": ${True if same_school and prohibit_school else False}
    - "restrained_school_name": |
        % if same_school and prohibit_school:
        % if which_school == "protected_school":
        ${protected_school.name}
        % else:
        ${other_school.name}
        % endif
        % endif
    - "restrained_school_address": |
        % if same_school and prohibit_school:
        % if which_school == "protected_school":
        ${protected_school.on_one_line(bare=True)}
        % else:
        ${other_school.on_one_line(bare=True)}
        % endif
        % endif
    - "no_contact": ${protection_requested['no_contact']}
    - "no_coming": ${protection_requested['away_places']}
    - "feet_away": ${distance_state if protection_requested['away_places'] else ""}
    - "no_home": ${protected_place_types['Home'] if protection_requested['away_places'] else False}
    - "no_school_or_daycare": ${True if protection_requested['away_places'] and (protected_place_types['School'] or protected_place_types['day_care']) else False}
    - "no_workplace": ${protected_place_types['Workplace'] if protection_requested['away_places'] else False}
    - "no_other_place": ${protected_place_types['Other'] if protection_requested['away_places'] else False}
    - "other_places_text": |
        % if protection_requested['away_places'] and protected_place_types['Other']:
        ${ ", ".join(other_places.splitlines()) }
        % endif
    - "no_property": ${protection_requested["away_people"]}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "e_signature": ${"/s/ " + users[0].name.full(middle='full') if e_signature else ""}
    - "petitioner_name": ${users[0].name.full(middle='full')}
    - "petitioner_address_line_1": ${ users[0].address.line_one(bare=True)}
    - "petitioner_address_line_2": ${ users[0].address.line_two()}
    - "petitioner_phone": ${ phone_number_formatted(users[0].phone_number)}
    - "petitioner_email": ${users[0].email if users[0].has_email_address else ""}
    - "just_email": ${"Email"}
    - "protected_home_address": ${home.on_one_line(bare=True) if protection_requested['away_places'] and protected_place_types['Home'] else ""}
    - "protected_work_addresses": ${protected_workplace.name + ", " + protected_workplace.on_one_line(bare=True)}
    - "school_daycare_addresses": ${comma_and_list(away_school_daycare_list)}
    - "respondent_prison": ${respondent_jail_name if respondent_jail_check else ""}
    - "others_addendum": |
        % if others_protected.there_are_any and others_protected.number_gathered() > 2:
        A list of additional protected persons is attached.
        % endif
---
attachment:
  variable name: emergency_order[i]
  name: emergency_order
  filename: emergency_order
  skip undefined: True
  editable: False
  pdf template file: cnco_state_order.pdf
  fields:
    - "circuit_court": ${court_circuit.upper()}
    - "filing_county": ${trial_court.address.county.upper()}
    - "emergency_type": ${True}
    - "plenary_type": ${False}
    - "independent": ${True}
    - "user_name": ${users[0].name.full(middle='full')}
    - "main_protected_name": ${users[0].name.full(middle='full') if filing_for_whom == "me" else users[1].name.full(middle='full')}
    - "behalf_of_name": |
        % if filing_for_whom != "me":
        ${users[1].name.full(middle='full')}
        % endif
    - "others_protected": ${others_protected.full_names() if others_protected.there_are_any else ""}
    - "protect_a_minor": ${True if filing_for_whom == "child" else False}
    - "protect_an_adult": ${True if filing_for_whom == "adult" else False}
    - "respondent_has_parents": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Parents":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_has_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Guardians":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians != "none":
        ${parents_guardians.full_names()}
        % endif
    - "school_board_notice": ${prohibit_school if same_school else False}
    - "behalf_of_names": ${ others_protected.full_names() if others_protected.there_are_any else ""}
    - "abuser_name": ${ other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "user_address": |
        % if filing_for_whom != "me" and not hide_address:
        ${users[1].address.on_one_line(bare=True)}
        % else:
        ${users[0].address.on_one_line(bare=True)}
        % endif
    - "use_safe_address": ${hide_address}
    - "other_protected_name_1": ${others_protected[0].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_1": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[0].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[0].address.on_one_line(bare=True)}
        % endif
        % endif
    - "other_protected_name_2": ${others_protected[1].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_2": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[1].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[1].address.on_one_line(bare=True)}
        % endif
        % endif
    - "respondent_name": ${other_parties[0].name.full(middle='full')}
    - "respondent_home_check": ${other_parties[0].last_address_known if other_parties[0].address_known == False else other_parties[0].address_known}
    - "respondent_home_address": ${other_parties[0].address.on_one_line(bare=True)}
    - "abuser_birth": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": |
        % if other_parties[0].state_gender == "Male":
        Male
        % elif other_parties[0].state_gender == "Female":
        Female
        % elif other_parties[0].state_gender == "Other":
        ${other_parties[0].state_other_gender}
        % endif
    - "respondent_race": ${respondent_race_other if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_height": ${(str(other_parties[0].height_feet) + "'" + str(other_parties[0].height_inches)  + "''") if str(other_parties[0].height_feet) != "0" else ""}
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_features": ${other_parties[0].features}
    - "respondent_employer_name": ${ other_parties[0].employer_name if other_parties[0].has_job else ""}
    - "respondent_work_check": ${True if other_parties[0].has_job and other_parties[0].employer_address.on_one_line(bare=True) != "" else False}
    - "respondent_work_address": ${ other_parties[0].employer_address.on_one_line(bare=True) if other_parties[0].has_job else ""}
    - "respondent_work_hours": ${other_parties[0].work_hours if other_parties[0].has_job else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_ssn": ${other_parties[0].ssn}
    - "respondent_dl": ${other_parties[0].drivers_license}
    - "respondent_plate": ${other_parties[0].license_plate if other_parties[0].has_vehicle else ""}
    - "respondent_other_id_number": ${other_parties[0].another_number if other_parties[0].another_number_check else ""}
    - "respondent_other_id_description": ${other_parties[0].another_number_description if other_parties[0].another_number_check else ""}
    - "respondent_jail_check": ${respondent_jail_check}
    - "respondent_jail_name": ${respondent_jail_name}
    - "respondent_address_unknown": ${False if other_parties[0].address_known else True}
    - "armed": ${caution_reasons['armed']}
    - "suicidal": ${caution_reasons['suicide']}
    #What does the Y checkbox on the form mean?
    - "y_check": ${False}
    - "no_school": ${prohibit_school}
    - "restrained_school_name": ${protected_school.name if prohibit_school else ""}
    - "restrained_school_address": ${protected_school.on_one_line(bare=True) if prohibit_school else ""}
    - "no_contact": ${protection_requested['no_contact']}
    - "no_coming": ${protection_requested['away_places']}
    - "feet_away": ${distance_state if protection_requested['away_places'] else ""}
    - "no_home": ${protected_place_types['Home'] if protection_requested['away_places'] else False}
    - "no_school_or_daycare": ${True if protection_requested['away_places'] and (protected_place_types['School'] or protected_place_types['day_care']) else False}
    - "no_workplace": ${protected_place_types['Workplace'] if protection_requested['away_places'] else False}
    - "no_other_place": ${protected_place_types['Other'] if protection_requested['away_places'] else False}
    - "other_places": |
        % if protection_requested['away_places'] and protected_place_types['Other']:
        ${ ", ".join(other_places.splitlines()) }
        % endif
    - "no_property": ${protection_requested["away_people"]}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "protected_home_address": ${home.on_one_line(bare=True) if protection_requested['away_places'] and protected_place_types['Home'] else ""}
    - "protected_work_address": ${protected_workplace.name + ", " + protected_workplace.on_one_line(bare=True)}
    - "protected_school_day_care_addresses": ${comma_and_list(away_school_daycare_list)}
    - "respondent_prison": ${respondent_jail_name if respondent_jail_check else ""}
    - "others_addendum": |
        % if others_protected.there_are_any and others_protected.number_gathered() > 2:
        A list of additional protected persons is attached.
        % endif
    - "minor_has_parents": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Parents":
        True
        % else:
        False
        % endif
    - "minor_has_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Guardians":
        True
        % else:
        False
        % endif
---
attachment:
  variable name: plenary_order[i]
  name: plenary_order
  filename: plenary_order
  skip undefined: True
  editable: False
  pdf template file: cnco_state_order.pdf
  fields:
    - "circuit_court": ${court_circuit.upper()}
    - "filing_county": ${trial_court.address.county.upper()}
    - "emergency_type": ${False}
    - "plenary_type": ${True}
    - "independent": ${True}
    - "user_name": ${users[0].name.full(middle='full')}
    - "main_protected_name": ${users[0].name.full(middle='full') if filing_for_whom == "me" else users[1].name.full(middle='full')}
    - "behalf_of_name": |
        % if filing_for_whom != "me":
        ${users[1].name.full(middle='full')}
        % endif
    - "others_protected": ${others_protected.full_names() if others_protected.there_are_any else ""}
    - "protect_a_minor": ${True if filing_for_whom == "child" else False}
    - "protect_an_adult": ${True if filing_for_whom == "adult" else False}
    - "respondent_has_parents": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Parents":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_has_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Guardians":
        ${True}
        % else:
        ${False}
        % endif
    - "respondent_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians != "none":
        ${parents_guardians.full_names()}
        % endif
    - "school_board_notice": ${prohibit_school if same_school else False}
    - "behalf_of_names": ${ others_protected.full_names() if others_protected.there_are_any else ""}
    - "abuser_name": ${ other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "user_address": |
        % if filing_for_whom != "me" and not hide_address:
        ${users[1].address.on_one_line(bare=True)}
        % else:
        ${users[0].address.on_one_line(bare=True)}
        % endif
    - "use_safe_address": ${hide_address}
    - "other_protected_name_1": ${others_protected[0].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_1": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[0].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[0].address.on_one_line(bare=True)}
        % endif
        % endif
    - "other_protected_name_2": ${others_protected[1].name.full(middle='full') if others_protected.there_are_any else ""}
    - "other_protected_address_2": |
        % if others_protected.there_are_any:
        % if hide_address and others_protected[1].use_safe_address:
        ${users[0].address.on_one_line(bare=True)}
        % else:
        ${others_protected[1].address.on_one_line(bare=True)}
        % endif
        % endif
    - "respondent_name": ${other_parties[0].name.full(middle='full')}
    - "respondent_home_check": ${other_parties[0].address_known}
    - "respondent_home_address": ${other_parties[0].address.on_one_line(bare=True)}
    - "abuser_birth": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": |
        % if other_parties[0].state_gender == "Male":
        Male
        % elif other_parties[0].state_gender == "Female":
        Female
        % elif other_parties[0].state_gender == "Other":
        ${other_parties[0].state_other_gender}
        % endif
    - "respondent_race": ${respondent_race_other if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_height": ${(str(other_parties[0].height_feet) + "'" + str(other_parties[0].height_inches)  + "''") if str(other_parties[0].height_feet) != "0" else ""}
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_features": ${other_parties[0].features}
    - "respondent_employer_name": ${ other_parties[0].employer_name if other_parties[0].has_job else ""}
    - "respondent_work_check": ${True if other_parties[0].has_job and other_parties[0].employer_address.on_one_line(bare=True) != "" else False}
    - "respondent_work_address": ${ other_parties[0].employer_address.on_one_line(bare=True) if other_parties[0].has_job else ""}
    - "respondent_work_hours": ${other_parties[0].work_hours if other_parties[0].has_job else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_ssn": ${other_parties[0].ssn}
    - "respondent_dl": ${other_parties[0].drivers_license}
    - "respondent_plate": ${other_parties[0].license_plate if other_parties[0].has_vehicle else ""}
    - "respondent_other_id_number": ${other_parties[0].another_number if other_parties[0].another_number_check else ""}
    - "respondent_other_id_description": ${other_parties[0].another_number_description if other_parties[0].another_number_check else ""}
    - "respondent_jail_check": ${respondent_jail_check}
    - "respondent_jail_name": ${respondent_jail_name}
    - "respondent_address_unknown": ${False if other_parties[0].address_known else True}
    - "armed": ${caution_reasons['armed']}
    - "suicidal": ${caution_reasons['suicide']}
    #What does the Y checkbox on the form mean?
    - "y_check": ${False}
    - "no_school": ${prohibit_school}
    - "restrained_school_name": ${protected_school.name if prohibit_school else ""}
    - "restrained_school_address": ${protected_school.on_one_line(bare=True) if prohibit_school else ""}
    - "no_contact": ${protection_requested['no_contact']}
    - "no_coming": ${protection_requested['away_places']}
    - "feet_away": ${distance_state if protection_requested['away_places'] else ""}
    - "no_home": ${protected_place_types['Home'] if protection_requested['away_places'] else False}
    - "no_school_or_daycare": ${True if protection_requested['away_places'] and (protected_place_types['School'] or protected_place_types['day_care']) else False}
    - "no_workplace": ${protected_place_types['Workplace'] if protection_requested['away_places'] else False}
    - "no_other_place": ${protected_place_types['Other'] if protection_requested['away_places'] else False}
    - "other_places": |
        % if protection_requested['away_places'] and protected_place_types['Other']:
        ${ ", ".join(other_places.splitlines()) }
        % endif
    - "no_property": ${protection_requested["away_people"]}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "protected_home_address": ${home.on_one_line(bare=True) if protection_requested['away_places'] and protected_place_types['Home'] else ""}
    - "protected_work_address": ${protected_workplace.name + ", " + protected_workplace.on_one_line(bare=True)}
    - "protected_school_day_care_addresses": ${comma_and_list(away_school_daycare_list)}
    - "respondent_prison": ${respondent_jail_name if respondent_jail_check else ""}
    - "others_addendum": |
        % if others_protected.there_are_any and others_protected.number_gathered() > 2:
        A list of additional protected persons is attached.
        % endif
    - "minor_has_parents": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Parents":
        True
        % else:
        False
        % endif
    - "minor_has_guardians": |
        % if prohibit_school and same_school and respondent_is_minor and parents_or_guardians == "Guardians":
        True
        % else:
        False
        % endif
---
attachment:
  variable name: op_summons[i]
  name: op_summons
  filename: op_summons
  skip undefined: True
  editable: False
  pdf template file: op_summons.pdf
  fields:
    - "county__1": ${ trial_court.address.county.upper() }
    - "county__2": ${ trial_court.address.county.upper() }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "petitioner__3": ${ users[0].name.full(middle="full") }
    - "respondent__1": ${other_parties[0].name.full(middle="full")}
    - "respondent__4": ${other_parties[0].name.full(middle="full")}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "respondent__2": ${other_parties[0].name.full(middle="full")}
    - "service_address_line_1": |
        % if other_parties[0].which_address == "add_service_address":
        ${other_parties[0].service_address.line_one(bare=True)}
        % elif other_parties[0].which_address == "home_address":
        ${other_parties[0].address.line_one(bare=True)}
        % elif other_parties[0].which_address == "employer_address":
        ${other_parties[0].employer_address.line_one(bare=True)}
        % endif
    - "service_address_csz": |
        % if other_parties[0].which_address == "add_service_address":
        ${other_parties[0].service_address.line_two()}
        % elif other_parties[0].which_address == "home_address":
        ${other_parties[0].address.line_two()}
        % elif other_parties[0].which_address == "employer_address":
        ${other_parties[0].employer_address.line_two()}
        % endif
    - "respondent_phone": ${phone_number_formatted(other_parties[0].mobile_number) if trial_court_index == -1 and other_parties[0].phone_number == "" else phone_number_formatted(other_parties[0].phone_number)}
    - "respondent_email": ${ other_parties[0].email_address }
    - "respondent__3": ${other_parties[0].name.full(middle="full") if other_parties[0].bonus_service_check == True else ""}
    - "service_alt_address_line_1": |
        % if other_parties[0].bonus_service_check:
        % if other_parties[0].which_bonus_address == "home_address":
        ${other_parties[0].address.line_one(bare=True)}
        % elif other_parties[0].which_bonus_address == "employer_address":
        ${other_parties[0].employer_address.line_one(bare=True)}
        % elif other_parties[0].which_bonus_address == "service_address":
        ${other_parties[0].bonus_service_address.line_one(bare=True)}
        % endif
        % endif
    - "service_alt_address_csz": |
        % if other_parties[0].bonus_service_check:
        % if other_parties[0].which_bonus_address == "home_address":
        ${other_parties[0].address.line_two()}
        % elif other_parties[0].which_bonus_address == "employer_address":
        ${other_parties[0].employer_address.line_two()}
        % elif other_parties[0].which_bonus_address == "service_address":
        ${other_parties[0].bonus_service_address.line_two()}
        % endif
        % endif
    - "respondent_alt_phone": ${ phone_number_formatted(other_parties[0].alt_phone) if other_parties[0].bonus_service_check and other_parties[0].bonus_contact_info else "" }
    - "respondent_alt_email": ${ other_parties[0].alt_email if other_parties[0].bonus_service_check and other_parties[0].bonus_contact_info else "" }
    - "service_method_sheriff": ${ True if service_method == "sheriff" and service_state == "IL" else ""}
    - "service_method_sheriff_outside_il": ${ True if service_method == "sheriff" and service_state != "IL" and service_state != "" else ""}
    - "service_location_outside_il": |
        % if service_method == "sheriff" and service_state != "IL":
        ${ service_county + ", " + service_state }
        % endif
    - "service_method_sps": ${ True if service_method == "sps" else "" }
    - "service_method_detective": ${ True if service_method == "detective" else "" }
    - "protective_order_type_cnco": ${ True }
    - "court_date_on_attached": ${ True }
    - "show_address": ${ not hide_address }
    - "hide_address": ${ hide_address }
    - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
    - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
    - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].has_email_address else ""}
---
attachment:
  variable name: others_protected_addendum[i]
  name: others_protected_addendum
  filename: others_protected_addendum
  docx template file: others_protected_addendum.docx
---
attachment:
  variable name: cnco_events_addendum[i]
  name: cnco_events_addendum
  filename: cnco_events_addendum
  docx template file: cnco_events_addendum.docx
---
attachment:
  variable name: cook_cnco_petition[i]
  name: cook_cnco_petition
  filename: cook_cnco_petition
  skip undefined: True
  editable: False
  pdf template file: cook_cnco_petition.pdf
  fields:
    - "is_petition": ${True}
    - "temp_petition": ${True}
    - "is_petition_2": ${True}
    - "temp_petition_2": ${True}
    - "is_petition_3": ${True}
    - "temp_petition_3": ${True}
    - "on_behalf_of": ${users[0].name.full(middle='full') if filing_for_whom != "me" else ""}
    - "behalf_petitioner": ${users[1].name.full(middle='full') if filing_for_whom != "me" else users[0].name.full(middle='full')}
    #- "behalf_petitioner": |
    #    % if others_protected.there_are_any:
    #    % if others_protected.number_gathered() > 0:
    #    ${others_protected.full_names()}
    #    % endif
    #    % endif
    - "respondent_1": ${other_parties[0].name.full(middle='full')}
    - "respondent_2": ${other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "respondent_birth_date": ${other_parties[0].birthdate}
    - "independent": ${True}
    - "emergency_check_1": ${order_type['emergency']}
    - "emergency_check_2": ${order_type['emergency']}
    - "plenary_check": ${order_type['plenary']}
    - "petitioner_name_1": ${users[0].name.full(middle='full')}
    - "petitioner_name_2": ${users[0].name.full(middle='full') if filing_for_whom == "me" else users[1].name.full(middle='full')}
    - "child_name": ${users[1].name.full(middle='full') if filing_for_whom == "child" else ""}
    - "adult_name": ${users[1].name.full(middle='full') if filing_for_whom == "adult" else ""}
    - "safe_address": ${hide_address}
    - "address_is_residence": ${False if hide_address else True}
    - "petitioner_address": |
        % if filing_for_whom != "me" and not hide_address:
        ${users[1].address.on_one_line(bare=True)}
        % else:
        ${users[0].address.on_one_line(bare=True)}
        % endif
    - "respondent_name": ${other_parties[0].name.full(middle='full')}
    - "respondent_address": ${other_parties[0].address.on_one_line(bare=True)}
    - "respondent_birth_date": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": ${other_parties[0].cook_sex_other if other_parties[0].cook_sex == "other" else other_parties[0].cook_sex}    
    - "respondent_race": ${respondent_race_other if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_height": ${(str(other_parties[0].height_feet) + "'" + str(other_parties[0].height_inches)  + "''") if str(other_parties[0].height_feet) != "0" else ""}
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_characteristics": ${other_parties[0].features}
    - "employer_name": ${ other_parties[0].employer_name if other_parties[0].has_job else ""}
    - "employer_address": ${ other_parties[0].employer_address.on_one_line(bare=True) if other_parties[0].has_job else ""}
    - "incident_1": |
        % if abusive_acts[0].time != "":
        On or about ${abusive_acts[0].name.text}, ${abusive_acts[0].time}, at ${abusive_acts[0].place} the following occurred: ${abusive_acts[0].description}
        % else:
        On or about ${abusive_acts[0].name.text} at ${abusive_acts[0].place} the following occurred: ${abusive_acts[0].description}
        % endif
    - "additional_events_text": |
        % if abusive_acts.number_gathered() > 1:
        See attached page for additional incidents
        % endif
    - "no_police_report": ${ False if  abusive_acts[0].police_check else True}
    - "police_report_1": ${abusive_acts[0].police_number if abusive_acts[0].police_check else ""}
    - "others_protected_list": |     
        % if others_protected.there_are_any and filing_for_whom != "me":
        ${others_protected.full_names()}
        % elif filing_for_whom == "me" and not others_protected.there_are_any:
        ${users[0].name.full(middle='full')}
        % elif others_protected.there_are_any and filing_for_whom == "me":
        % if others_protected.number_gathered() == 1:
        ${users[0].name.full(middle='full')} and ${others_protected.full_names()}
        % elif others_protected.number_gathered() == 0:
        ${users[0].name.full(middle='full')}
        % else:
        ${users[0].name.full(middle='full')}, ${others_protected.full_names()}
        % endif
        % endif
    - "away_people": ${protection_requested['away_people']}
    - "no_contact": ${protection_requested['no_contact']}
    - "away_places": ${protection_requested['away_places']}
    - "no_property": ${protection_requested['away_property']}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "e_signature_1": ${users[0].name.full(middle='full') if e_signature else ""}
    - "e_signature_2": ${users[0].name.full(middle='full') if e_signature else ""}
    - "user_name": ${users[0].name.full(middle='full')}
    - "user_address_line_one": ${ users[0].address.line_one(bare=True)}
    - "user_city": ${ users[0].address.city}
    - "user_state": ${ users[0].address.state}
    - "user_zip": ${ users[0].address.zip}
    - "signature_date": ${today() if e_signature else ""}
    - "user_phone": ${ phone_number_formatted(users[0].phone_number)}
    - "user_email": ${ users[0].email if users[0].has_email_address else ""}
    - "yes_another_order": ${True if has_other_ops else False}
    - "no_another_order": ${True if has_other_ops == False else False}
    - "maybe_another_order": ${True if has_other_ops is None else False}
    - "order_names_1": ${other_ops[0].name.text if has_other_ops else ""}
    - "order_state_county_1": |
        % if has_other_ops:
        ${end_in_county(other_ops[0].county)}, ${other_ops[0].state}
        % endif
    - "order_year_1": ${other_ops[0].year if has_other_ops else ""}
    - "order_names_2": ${other_ops[1].name.text if has_other_ops else ""}
    - "order_state_county_2": |
        % if has_other_ops:
        ${end_in_county(other_ops[1].county)}, ${other_ops[1].state}
        % endif
    - "order_year_2": ${other_ops[1].year if has_other_ops else ""}
    - "yes_another_case": ${True if has_other_cases == "Yes" or previous_cook_case_type != "none" else False}
    - "no_another_case": ${True if has_other_cases == "No" and previous_cook_case_type == "none" else False}
    - "maybe_another_case": ${True if has_other_cases == "I don't know" and previous_cook_case_type == "none" else False}
    - "case_people_1": |
        % if previous_cook_case_type != "none":
        ${users[0].name.full(middle='full')} and ${other_parties[0].name.full(middle='full')}
        % elif has_other_cases == "Yes":
        ${other_cases[0].name.text}
        % endif
    - "case_state_county_1": |
        % if previous_cook_case_type != "none":
        Cook County, IL
        % elif has_other_cases == "Yes":
        ${end_in_county(other_cases[0].county)}, ${other_cases[0].state}
        % endif
    - "case_year_1": |
        % if previous_cook_case_type != "none":
        ${previous_cook_case_date.year}
        % elif has_other_cases == "Yes":
        ${other_cases[0].year}
        % endif
    - "case_people_2": |
        % if previous_cook_case_type != "none" and has_other_cases == "Yes":
        ${other_cases[0].name.text}
        % elif has_other_cases == "Yes":
        ${other_cases[1].name.text}
        % endif
    - "case_state_county_2": |
        % if previous_cook_case_type != "none" and has_other_cases == "Yes":
        ${end_in_county(other_cases[0].county)}, ${other_cases[0].state}
        % elif has_other_cases == "Yes":
        ${end_in_county(other_cases[1].county)}, ${other_cases[1].state}
        % endif
    - "case_year_2": |
        % if previous_cook_case_type != "none" and has_other_cases == "Yes":
        ${other_cases[0].year}
        % elif has_other_cases == "Yes":
        ${other_cases[1].year}
        % endif
    - "sexual_conduct": ${abuse_type["conduct"]}
    - "sexual_penetration": ${abuse_type["penetration"]}
    - "signature_date": ${today() if e_signature else ""}
---
attachment:
  variable name: cook_sheriff_info_sheet[i]
  name: cook_sheriff_info_sheet
  filename: cook_sheriff_info_sheet
  skip undefined: True
  editable: False
  pdf template file: cook_sheriff_info_sheet.pdf
  fields:
    - "respondent": ${other_parties[0].name.full(middle="full")}
    - "alias_names": ${ other_parties[0].alias_names if other_parties[0].has_alias else ""}
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'Other' else other_parties[0].race }
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_male_at_birth": ${ True if respondent_sex_at_birth == "male" else '' }    
    - "respondent_female_at_birth": ${ True if respondent_sex_at_birth == "female" else '' }    
    - "respondent_gender_m": ${ True if other_parties[0].cook_gender['male'] == True else '' } 
    - "respondent_gender_w": ${ True if other_parties[0].cook_gender['female'] == True else '' }
    - "respondent_gender_tw": ${ True if other_parties[0].cook_gender['transfem'] == True else '' }
    - "respondent_gender_tm": ${ True if other_parties[0].cook_gender['transmasc'] == True else '' }
    - "respondent_gender_nb": ${ True if other_parties[0].cook_gender['nonbinary'] == True else '' }
    - "respondent_gender_other": ${ True if other_parties[0].cook_gender['other'] == True else '' }
    - "respondent_gender_other_text": ${ respondent_cook_gender_other if other_parties[0].cook_gender['other'] == True else '' }
    
    - "respondent_age": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].age_in_years() }
        % endif
    - "respondent_height": |
         % if other_parties[0].height_feet > 1:
         ${ str(other_parties[0].height_feet) + "\'" }
         % if other_parties[0].height_inches > 0:
         ${ str(other_parties[0].height_inches) + "\""}
         % endif
         % else:
         ${""}
         % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_skin": |
        % if other_parties[0].skin != "":
        ${ respondent_skin_other if other_parties[0].skin == 'other' else other_parties[0].skin }
        % endif
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_glasses": ${other_parties[0].glasses if other_parties[0].glasses != "" else ''}
    - "respondent_tattoos": ${ other_parties[0].features if other_parties[0].features != "" else '' }
    - "respondent_history_illness": ${ True if caution_reasons['illness'] == True else "" }
    - "respondent_alcohol": ${ True if caution_reasons['alcohol'] == True else "" }
    - "respondent_drugs": ${ True if caution_reasons['drugs'] == True else "" }
    - "respondent_firearms_on_person": ${ True if caution_reasons['armed'] == True else "" }
    - "respondent_weapons_in_home": ${ True if caution_reasons['home'] == True else "" }
    - "respondent_weapons_description": ${ other_parties[0].weapons_info if caution_reasons['armed'] or caution_reasons['home'] else "" }       
    - "respondent_suicidal": ${ True if caution_reasons['suicide'] == True else ''  }    
    - "respondent_probation_yes":  ${ True if respondent_on_probation == "Yes" else ''  } 
    - "respondent_probation_no":  ${ True if respondent_on_probation == "No" else ''  }
    - "respondent_probation_county":  ${ respondent_probation_county if respondent_on_probation == "Yes" else ''  }   
    - "respondent_employer": |
        % if other_parties[0].has_job:
        ${ other_parties[0].employer_name }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_type": |
        % if other_parties[0].has_job and respondent_work_type != "":
        ${ respondent_work_type }
        % else:
        ${ "" }
        % endif      
    - "service_address_line_1": |
        % if other_parties[0].which_address == "add_service_address":
        ${ other_parties[0].service_address.line_one(bare=True) }
        % elif other_parties[0].which_address == "home_address":
        ${ other_parties[0].address.line_one(bare=True) }        
        % else:
        ${ other_parties[0].employer_address.line_one(bare=True) }        
        % endif
    - "service_city": |
        % if other_parties[0].which_address == "add_service_address":
        ${other_parties[0].service_address.city}, ${other_parties[0].service_address.state}
        % elif other_parties[0].which_address == "home_address":
        ${ other_parties[0].address.city }, ${other_parties[0].address.state}        
        % else:
        ${ other_parties[0].employer_address.city }, ${other_parties[0].employer_address.state}      
        % endif      
    - "last_known_address": |
        % if other_parties[0].address_known or other_parties[0].last_address_known:
        ${other_parties[0].address.line_one(bare=True)}
        % endif      
    - "last_known_city": |
        % if other_parties[0].address_known or other_parties[0].last_address_known:
        ${ other_parties[0].address.city }, ${other_parties[0].address.state}    
        % endif
    - "respondent_work_address": |
        % if other_parties[0].has_job:
        ${ other_parties[0].employer_address.line_one(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_city": |
        % if other_parties[0].has_job:
        ${ other_parties[0].employer_address.city }, ${other_parties[0].employer_address.state}    
        % else:
        ${ "do not know" }
        % endif

    - "service_alt_address_line_1": |
        % if other_parties[0].bonus_service_check:
        % if other_parties[0].which_bonus_address == "service_address":
        ${other_parties[0].bonus_service_address.line_one(bare=True)}
        % elif other_parties[0].which_bonus_address == "home_address":
        ${other_parties[0].address.line_one(bare=True)}
        % else:
        ${other_parties[0].employer_address.line_one(bare=True)}
        % endif
        % endif
    - "service_alt_city": |
        % if other_parties[0].bonus_service_check:
        % if other_parties[0].which_bonus_address == "service_address":
        ${other_parties[0].bonus_service_address.city}, ${other_parties[0].bonus_service_address.state}   
        % elif other_parties[0].which_bonus_address == "home_address":
        ${other_parties[0].address.city}, ${other_parties[0].address.state}   
        % else:
        ${other_parties[0].employer_address.city}, ${other_parties[0].employer_address.state}   
        % endif
        % endif
    - "respondent_phone": ${ phone_number_formatted(other_parties[0].phone_number)}
    - "respondent_cell": ${ phone_number_formatted(other_parties[0].mobile_number) }
    - "respondent_email": ${ other_parties[0].email_address }
    - "respondent_social_media_yes": ${ True if respondent_on_social_media == "Yes" else '' }
    - "respondent_social_media_no": ${ True if respondent_on_social_media == "No" else '' }
    - "respondent_social_media_accounts": ${ respondent_social_media_accounts if respondent_on_social_media == "Yes" else '' }
    - "respondent_work_hours": |
        % if other_parties[0].has_job and respondent_work_type != "":
        ${ other_parties[0].work_hours }
        % else:
        ${ "" }
        % endif
    - "additional_service_info": ${ service_information }
    - "cook_vehicle_make": ${ other_parties[0].vehicle_make }
    - "cook_vehicle_model": ${ other_parties[0].vehicle_model }
    - "cook_vehicle_year": ${ other_parties[0].vehicle_year }
    - "cook_vehicle_color": ${ other_parties[0].vehicle_color }
    - "cook_vehicle_plate": ${ other_parties[0].license_plate }
    - "cook_vehicle_state": ${ state_name(other_parties[0].vehicle_state) }

    - "preparer_name": ${ users[0].name.full(middle="full") }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) }
---
attachment:
  variable name: cook_dv_cover_sheet[i]
  name: cook_dv_cover_sheet
  filename: cook_dv_cover_sheet
  skip undefined: True
  editable: False
  pdf template file: cook_dv_cover_sheet.pdf
  fields:
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent": ${other_parties[0].name.full(middle="full")}
    - "case_number__1": ${ case_number }
    - "cnco_petition": ${ True }
    - "involves_minors_yes": ${ True if any_minors else '' }
    - "involves_minors_no": ${ True if not any_minors else '' }
    - "previous_divorce_yes": ${True if previous_cook_case_type == "divorce" else False}
    - "previous_divorce_no": ${False if previous_cook_case_type == "divorce" else True}
    - "previous_parentage_yes": ${True if previous_cook_case_type == "parentage" else False}
    - "previous_parentage_no": ${False if previous_cook_case_type == "parentage" else True}
    - "previous_cook_case_date": ${previous_cook_case_date}
    - "previous_cook_case_number": ${previous_cook_case_number}
    - "previous_cook_case_judge": ${previous_cook_case_judge}
    - "pro_se_cb": ${ True }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "preparer_address_line_1": ${ users[0].address.line_one(bare=True) }
    - "petitioner_city": ${ users[0].address.city }
    - "petitioner_state": ${ users[0].address.state }
    - "petitioner_zip": ${ users[0].address.zip }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) if users[0].phone_number != "" else "" }
    - "preparer_email": ${ users[0].email if users[0].has_email_address else ""}
---
attachment:
  variable name: cook_e_order[i]
  name: cook_e_order
  filename: cook_e_order
  skip undefined: True
  editable: False
  pdf template file: cook_cnco_order.pdf
  fields:
    - "filer": ${users[0].name.full(middle='full') if filing_for_whom != "me" else ""}
    - "behalf_of": ${users[1].name.full(middle='full') if filing_for_whom != "me" else users[0].name.full(middle='full')}
    #- "additional_protected": |
    #    % if others_protected.there_are_any:
    #    ${others_protected.full_names()}
    #    % endif
    - "other_protected_parties": |
        % if others_protected.there_are_any:
        ${others_protected.full_names()}
        % endif
    - "respondent": ${other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "respondent_birth_date": ${other_parties[0].birthdate}
    - "independent": ${True}
    - "emergency": ${True}
    - "plenary": ${False}
    - "petitioner_name": ${users[0].name.full(middle='full') if filing_for_whom == "me" else users[1].name.full(middle='full')}
    - "petitioner_name_and_address": |
        % if hide_address:
        % if filing_for_whom == "me":
        ${users[0].name.full(middle='full')}
        % else:
        ${users[1].name.full(middle='full')}
        % endif
        % elif filing_for_whom == "me":
        ${users[0].name.full(middle='full')}, ${users[0].address.on_one_line(bare=True)}
        % else:
        ${users[1].name.full(middle='full')}, ${users[1].address.on_one_line(bare=True)}
        % endif
    - "safe_address": ${hide_address}
    - "respondent_name_and_address": |
        ${other_parties[0].name.full(middle='full')}, ${other_parties[0].address.on_one_line(bare=True)}
    - "respondent_gender": |
        % if other_parties[0].cook_gender['other']:
        ${other_parties[0].cook_sex_other}
        % else:
        ${other_parties[0].cook_sex}
        % endif
    - "respondent_birth_date": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_race": ${respondent_race_other if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "away_property": ${protection_requested['away_property']}
    - "no_contact": ${protection_requested['no_contact']}
    - "away_places": ${protection_requested['away_places']}
    - "away_people": ${protection_requested['away_people']}
    - "distance_people": ${distance_people if protection_requested['away_people'] else ""}
    - "distance_places": ${distance_places if protection_requested['away_places'] else ""}
    - "away_residence": ${protected_place_types['Home'] if protection_requested['away_places'] else False}
    - "away_school_daycare": |
        % if protection_requested['away_places'] and (protected_place_types['School'] or protected_place_types['day_care']):
        True
        % else:
        False
        % endif
    - "away_workplace": ${protected_place_types['Workplace'] if protection_requested['away_places'] else False}
    - "away_other": ${protected_place_types['Other'] if protection_requested['away_places'] else False}
    - "other_places": |
        % if protection_requested['away_places'] and protected_place_types['Other']:
        ${ ", ".join(other_places.splitlines()) }
        % endif
    - "residence_address": ${home.on_one_line(bare=True) if protection_requested['away_places'] and protected_place_types['Home'] else ""}
    - "employer_address": ${protected_workplace.name + ", " + protected_workplace.on_one_line(bare=True)}
    - "school_daycare_address": ${comma_and_list(away_school_daycare_list)}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "user_name": ${users[0].name.full(middle='full')}
    - "user_address_line_one": ${users[0].address.line_one(bare=True)}
    - "user_city": ${users[0].address.city}
    - "user_state": ${users[0].address.state}
    - "user_zip": ${users[0].address.zip}
    - "user_phone": ${ phone_number_formatted(users[0].phone_number)}
    - "user_email": ${ users[0].email if users[0].has_email_address else ""}
---
attachment:
  variable name: cook_p_order[i]
  name: cook_p_order
  filename: cook_p_order
  skip undefined: True
  editable: False
  pdf template file: cook_cnco_order.pdf
  fields:
    - "filer": ${users[0].name.full(middle='full') if filing_for_whom != "me" else ""}
    - "behalf_of": ${users[1].name.full(middle='full') if filing_for_whom != "me" else users[0].name.full(middle='full')}
    #- "additional_protected": |
    #    % if others_protected.there_are_any:
    #    ${others_protected.full_names()}
    #    % endif
    - "other_protected_parties": |
        % if others_protected.there_are_any:
        ${others_protected.full_names()}
        % endif
    - "respondent": ${other_parties[0].name.full(middle='full')}
    - "case_number": ${""}
    - "respondent_birth_date": ${other_parties[0].birthdate}
    - "independent": ${True}
    - "emergency": ${False}
    - "plenary": ${True}
    - "petitioner_name": ${users[0].name.full(middle='full') if filing_for_whom == "me" else users[1].name.full(middle='full')}
    - "petitioner_name_and_address": |
        % if hide_address:
        % if filing_for_whom == "me":
        ${users[0].name.full(middle='full')}
        % else:
        ${users[1].name.full(middle='full')}
        % endif
        % elif filing_for_whom == "me":
        ${users[0].name.full(middle='full')}, ${users[0].address.on_one_line(bare=True)}
        % else:
        ${users[1].name.full(middle='full')}, ${users[1].address.on_one_line(bare=True)}
        % endif
    - "safe_address": ${hide_address}
    - "respondent_name_and_address": |
        ${other_parties[0].name.full(middle='full')}, ${other_parties[0].address.on_one_line(bare=True)}
    - "respondent_gender": |
        % if other_parties[0].cook_gender['other']:
        ${other_parties[0].cook_sex_other}
        % else:
        ${other_parties[0].cook_sex}
        % endif
    - "respondent_birth_date": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].date_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_race": ${respondent_race_other if other_parties[0].race == "Other" else other_parties[0].race}
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${other_parties[0].weight if other_parties[0].weight > 0 else ""}
    - "respondent_hair": ${ other_parties[0].hair}
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "away_property": ${protection_requested['away_property']}
    - "no_contact": ${protection_requested['no_contact']}
    - "away_places": ${protection_requested['away_places']}
    - "away_people": ${protection_requested['away_people']}
    - "distance_people": ${distance_people if protection_requested['away_people'] else ""}
    - "distance_places": ${distance_places if protection_requested['away_places'] else ""}
    - "away_residence": ${protected_place_types['Home'] if protection_requested['away_places'] else False}
    - "away_school_daycare": |
        % if protection_requested['away_places'] and (protected_place_types['School'] or protected_place_types['day_care']):
        True
        % else:
        False
        % endif
    - "away_workplace": ${protected_place_types['Workplace'] if protection_requested['away_places'] else False}
    - "away_other": ${protected_place_types['Other'] if protection_requested['away_places'] else False}
    - "other_places": |
        % if protection_requested['away_places'] and protected_place_types['Other']:
        ${ ", ".join(other_places.splitlines()) }
        % endif
    - "residence_address": ${home.on_one_line(bare=True) if protection_requested['away_places'] and protected_place_types['Home'] else ""}
    - "employer_address": ${protected_workplace.name + ", " + protected_workplace.on_one_line(bare=True)}
    - "school_daycare_address": ${comma_and_list(away_school_daycare_list)}
    - "other_relief_check": ${other_parties[0].anything_else}
    - "other_relief_text": ${other_parties[0].what_else if other_parties[0].anything_else else ""}
    - "user_address_line_one": ${users[0].address.line_one(bare=True)}
    - "user_name": ${users[0].name.full(middle='full')}
    - "user_city": ${users[0].address.city}
    - "user_state": ${users[0].address.state}
    - "user_zip": ${users[0].address.zip}
    - "user_phone": ${ phone_number_formatted(users[0].phone_number)}
    - "user_email": ${ users[0].email if users[0].has_email_address else ""}
---
attachment:
  variable name: cnco_instructions[i]
  name: instructions
  filename: cnco_instructions
  docx template file: cnco_instructions.docx
---
attachment:
  variable name: sheriff_cover_sheet[i]
  name: sheriff_cover_sheet
  filename: sheriff_cover_sheet
  skip undefined: True
  editable: False
  pdf template file: sheriff_cover_sheet.pdf
  fields:
    - "fake": ${ "" }
---
attachment:
  variable name: efiling_exemption[i]
  name: efiling_exemption
  filename: efiling_exemption
  skip undefined: True
  editable: False
  pdf template file: efiling_exemption.pdf
  fields:
    - "county": ${trial_court.address.county}
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent": ${other_parties[0].name.full(middle="full")}
    - "case_number__1": ${ case_number }
    - "reason_dv": ${ True }
    - "e_signature": ${ users[0].name.full(middle="full") if e_signature else '' }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "user_address_one_line": ${ users[0].address.on_one_line(bare=True) }
    - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].has_email_address else ""}
---
section: Basic info
id: basic info review screen
event: section_basic
question: |
  Basic info
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: 
      - trial_court_index
      - recompute:
        - filing_county
    button: |
      **You are filing in:**
      ${end_in_county(filing_county)}
  - Edit: filing_for_whom
    button: |
      **You are filing for:**
      % if filing_for_whom == "me":
      Myself
      % elif filing_for_whom == "child":
      A child
      % elif filing_for_whom == "adult":
      An adult who cannot file for themself
      % endif
  - Edit: users[1].name.first
    button: |
      **Who are you filing on behalf of?**
      ${users[1].name.full(middle='full')}
    show if: filing_for_whom != "me"
  - Edit: other_parties[0].name.first
    button: |  
      **Perpetrator's name:**
      ${other_parties[0].name.full(middle='full')}
  - Edit: cook_district
    button: |
      **Which courthouse will you file in?**
      % if cook_district == '15':
      First Municipal District, Daley Center, 50 W. Washington Street, Chicago
      % elif cook_district == '16':
      Second Municipal District, 5600 Old Orchard Road, Skokie
      % elif cook_district == '17':
      Third Municipal District, 2121 Euclid Avenue, Rolling Meadows
      % elif cook_district == '18':
      Fourth Municipal District, 1500 Maybrook Drive, Maywood
      % elif cook_district == '19':
      Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview
      % elif cook_district == '20':
      Sixth Municipal District, 16501 South Kedzie Parkway, Markham
      % endif
    show if: trial_court.address.county.lower() == "cook"
  - Edit: jurisdiction_type
    button: |
      **You are filing in ${end_in_county(trial_court.address.county)} because:**
      
      % if jurisdiction_type['I live here']:
      * I or someone I am filing for live in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Respondent lives here']:
      * The person I am filing against lives in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Abuse was here']:
      * The abuse took place in ${end_in_county(trial_court.address.county)}.
      % endif
---
section: People you want to protect
id: petitioner review screen
event: section_petitioner
question: |
  People you want to protect
subquestion: |
  Edit your answers below.
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: filing_for_whom
    button: |
      **You are filing for:**
      % if filing_for_whom == "me":
      Myself
      % elif filing_for_whom == "child":
      A child
      % elif filing_for_whom == "adult":
      An adult who cannot file for themself
      % endif
  - Edit: users[1].name.first
    button: |
      **Who are you filing on behalf of?**
      ${users[1].name.full(middle='full')}
    show if: filing_for_whom != "me"
  - Edit: protect_whom
    button: |
      **Who do you want to protect?**
      
      % if protect_whom['me']:
      * Myself
      % endif
      % if protect_whom['minor']:
      * A minor child
      % endif
      % if protect_whom['adult']:
      * An adult who cannot file due to age, disablility or health
      % endif
  #- Edit: user_military
  #  button: |
  #      **Are you a service member of the Illinois National Guard or another reserve military component serving in Illinois?**
  #      % if user_military and has_military_order:
  #      Yes, and I have a Military Protective Order.
  #      % elif user_military:
  #      Yes, but I do not have a Military Protective Order.
  #      % else:
  #      No
  #      % endif
  #  show if: protect_whom['me']
  - Edit: users[0].phone_number
    button: |
      **Your safe phone number:**
      ${phone_number_formatted(users[0].phone_number)}
  - Edit: users[0].has_email_address
    button: |
      **Do you have an email address?**
      ${word(yesno(users[0].has_email_address))}
  - Edit: users[0].email    
    button: |
      **Your email address:**
      ${users[0].email}
    show if: users[0].has_email_address
  - Edit: hide_address
    button: |
      **${capitalize(do_does)} ${you_behalf} want to keep ${your_their} home address hidden?**
      ${word(yesno(hide_address))}
  - Edit: users[0].address.address
    button: |
      % if hide_address:
      **Your mailing address:**
      % else:
      **Your address:**
      % endif
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[1].address.address
    button: |
      **${users[1].name.full(middle='full')}'s address:**
      ${users[1].address.on_one_line(bare=True)}
    show if: filing_for_whom != "me" and not hide_address
  - Edit: users[0].birthdate
    button: |
      **Your birth date:**
      ${users[0].birthdate}
  - Edit: others_protected.there_are_any
    button: |
      **Do you want to protect anyone else with the CNCO?**
      ${word(yesno(others_protected.there_are_any))}
    show if: filing_for_whom == "me"
  - Edit: others_protected.revisit
    button: |
      **Others to protect: (Edit to change names, addresses, and other information)**

      % for my_var in others_protected:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: others_protected.there_are_any
---
id: others protected review screen
continue button field: others_protected.revisit
question: |
    Edit the others you want the CNCO to protect
subquestion: |
  ${ others_protected.table }

  ${ others_protected.add_action() }
---
table: others_protected.table
rows: others_protected
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Address, birth date, additional information: |
      action_button_html(url_action(row_item.attr_name("others_protected_info")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other protected info review screen
continue button field: x.others_protected_info
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Name of person to protect:**
      ${x.name.full(middle='full')}
  - Edit: x.why_include
    button: |
      **Reason to include in CNCO:**
      
      % if x.why_include['victim']:
      * They were sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')}.
      % endif
      % if x.why_include['petitioner_household']:
      * They are my family or household member.
      % endif
      % if x.why_include['other_household']:
      * They are the family or household member of someone sexually assaulted or sexually abused by ${other_parties[0].name.full(middle='full')}.
      % endif
      % if x.why_include['military']:
      * They are a member of the Illinois National Guard or another reserve military component who has received a Military Protective Order.
      % endif
      % if x.why_include['crisis_center']:
      * They work for a rape crisis center providing services to a survivor of ${other_parties[0].name.full(middle='full')}.
      % endif
      % if x.why_include.all_false():
      No applicable reason
      % endif
  #- Edit: x.birthdate
  #  button: |
  #    **${x.name.full(middle='full')}'s birth date:**
  #    ${x.birthdate}
  - Edit: x.is_minor
    button: |
      **Is ${x.name.full(middle='full')} under 18 years old?**
      ${word(yesno(x.is_minor))}
  - Edit: x.use_safe_address
    button: |
      **Do you want to use the safe mailing address for ${x.name.full(middle='full')}?**
      ${word(yesno(x.use_safe_address))}
    show if: hide_address
  - Edit: x.address.address
    button: |
      **${x.name.full(middle='full')}'s address:**
      ${x.address.on_one_line(bare=True)}
    show if: not hide_address or not x.use_safe_address
---
section: Person you want protection from
id: respondent review screen
event: section_respondent
question: |
  About the person you want protection from
subquestion: |
  Edit your answers below.
review:
  - Edit: other_parties[0].name.first
    button: |  
      **Perpetrator's name:**
      ${other_parties[0].name.full(middle='full')}
  - Edit: other_parties[0].state_gender
    button: |
      **${other_parties[0].name.full(middle='full')}'s gender:**
      % if other_parties[0].state_gender == "Other":
      ${other_parties[0].state_other_gender}
      % else:
      ${other_parties[0].state_gender}
      % endif
    show if: trial_court_index != -1
  - Edit: other_parties[0].cook_sex
    button: |
      **${other_parties[0].name.full(middle='full')}'s sex:**
      % if other_parties[0].cook_sex == "other":
      ${other_parties[0].cook_sex_other}
      % else:
      ${other_parties[0].cook_sex}
      % endif
    show if: trial_court_index == -1
  - Edit: other_parties[0].respondent_sex_at_birth
    button: |
      **${other_parties[0].name.full(middle='full')}'s sex assigned at birth:**
      *${respondent_sex_at_birth}
    show if: trial_court_index == -1
  - Edit: other_parties[0].cook_gender
    button: |
      **${other_parties[0].name.full(middle='full')}'s gender identity:**
      
      % if other_parties[0].cook_gender["male"]:
      * Male
      % endif
      % if other_parties[0].cook_gender["female"]:
      * Female
      % endif
      % if other_parties[0].cook_gender["transfem"]:
      * Transgender woman / Transfeminine
      % endif
      % if other_parties[0].cook_gender["transmasc"]:
      * Transgender man / Transmasculine
      % endif
      % if other_parties[0].cook_gender["nonbinary"]:
      * Nonbinary / Gender non-conforming
      % endif
      % if other_parties[0].cook_gender["other"]:
      * ${respondent_cook_gender_other}
      % endif
    show if: trial_court_index == -1
  - Edit: other_parties[0].race
    button: |
      **${other_parties[0].name.full(middle='full')}'s race:**
      % if other_parties[0].race == "Other":
      ${respondent_race_other}
      % else:
      ${other_parties[0].race}
      % endif
  - Edit: other_parties[0].skin
    button: |
      **${other_parties[0].name.full(middle='full')}'s skin tone:**
      % if other_parties[0].skin_tone == "Other":
      ${respondent_skin_other}
      % else:
      ${other_parties[0].skin}
      % endif
  - Edit: knows_respondent_dob
    button: |
      **${other_parties[0].name.full(middle='full')}'s birth date:**
      % if knows_respondent_dob == "exact":
      ${other_parties[0].birthdate}
      % elif knows_respondent_dob == "some":
      ${other_parties[0].date_info}
      % else:
      I don't know
      % endif
  - Edit: respondent_is_minor
    button: |
      **Is ${other_parties[0].name.full(middle='full')} under 18 years old?**
      ${word(yesno(respondent_is_minor))}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and knows_respondent_dob != "exact"
  - Edit: other_parties[0].weight
    button: |
      **${other_parties[0].name.full(middle='full')}'s height and weight:**
      % if other_parties[0].height_feet != "" and other_parties[0].height_inches != "":
      % if other_parties[0].weight != "":
      ${other_parties[0].height_feet} feet ${other_parties[0].height_inches} inches, ${other_parties.weight} pounds
      % else:
      ${other_parties[0].height_feet} feet ${other_parties[0].height_inches} inches
      % endif
      % else:
      % if other_parties[0].weight != "":
      ${other_parties.weight} pounds
      % else:
      I don't know
      % endif
      % endif
  - Edit: other_parties[0].eyes
    button: |
      **${other_parties[0].name.full(middle='full')}'s eye color:**
      ${other_parties[0].eyes}
  - Edit: other_parties[0].glasses
    button: |
      **Does ${other_parties[0].name.full(middle='full')} wear glasses?**
      ${other_parties[0].glasses}
  - Edit: other_parties[0].hair
    button: |
      **${other_parties[0].name.full(middle='full')}'s hair color:**
      ${other_parties[0].hair}
  - Edit: other_parties[0].features
    button: |
      **${other_parties[0].name.full(middle='full')}'s notable features:**
      % if other_parties[0].features == "":
      I don't know
      % else:
      ${other_parties[0].features}
      % endif
  - Edit: other_parties[0].has_alias
    button: |
      % if other_parties[0].has_alias:
      **${other_parties[0].name.full(middle='full')} other names:**
      ${other_parties[0].alias_names}
      % elif other_parties[0].has_alias is None:
      **Has ${other_parties[0].name.full(middle='full')} gone by any other names?**
      I don't know
      % else:
      **Has ${other_parties[0].name.full(middle='full')} gone by any other names?**
      No
      % endif
  - Edit: other_parties[0].ssn
    button: |
      **The last 4 digits of ${other_parties[0].name.full(middle='full')}'s Social Security Number:**
      % if other_parties[0].ssn == "":
      I don't know
      % else:
      ${other_parties[0].ssn}
      % endif
  - Edit: other_parties[0].drivers_license
    button: |
      **${other_parties[0].name.full(middle='full')}'s driver's license number:**
      % if other_parties[0].drivers_license == "":
      I don't know
      % else:
      ${other_parties[0].drivers_license}
      % endif
  - Edit: other_parties[0].has_vehicle
    button: |  
      **Does ${other_parties[0].name.full(middle='full')} have access to a vehicle?**
      % if other_parties[0].has_vehicle is None:
      I don't know
      % else:
      ${word(yesno(other_parties[0].has_vehicle))}
      % endif
  - Edit: other_parties[0].license_plate
    button: |
      **${other_parties[0].name.full(middle='full')}'s vehicle information:**
      
      % if other_parties[0].vehicle_year == "":
      * Year: I don't know
      % else:
      * Year: %{other_parties[0].vehicle_year}
      % endif
      % if other_parties.vehicle_make == "":
      * Make: I don't know
      % else:
      * Make: ${other_parties[0].vehicle_make}
      % endif
      % if other_parties[0].vehicle_model == "":
      * Model: I don't know
      % else:
      * Model: ${other_parties[0].vehicle_model}
      % endif
      % if other_parties.vehicle_cololr == "":
      * Color: I don't know
      % else:
      * Color: ${other_parties[0].vehicle_color}
      % endif
      % if other_parties[0].license_plate == "":
      * License plate number: I don't know
      % else:
      * License plate number: ${other_parties[0].license_plate}
      % endif
      % if other_parties[0].vehicle_state == "":
      * State: I don't know
      % else:
      * State: ${other_parties[0].vehicle_state}
      % endif
    show if: other_parties[0].has_vehicle
  - Edit: other_parties[0].another_number_check
    button: |
      **Do you know another number that can identify ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].another_number_check))}
  - Edit: other_parties[0].another_number
    button: |
      **${other_parties[0].name.full(middle='full')} other identifying number:**
      ${other_parties[0].another_number}, ${other_parties[0].another_number_description}
    show if: other_parties[0].another_number_check
  - Edit: other_parties[0].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s home phone number:**
      % if other_parties[0].phone_number != "":
      ${ phone_number_formatted(other_parties[0].phone_number) }      
      % else:
      ${ "do not know" }
      % endif
  - Edit: other_parties[0].mobile_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s cell number:**
      % if other_parties[0].mobile_number != "":
      ${ phone_number_formatted(other_parties[0].mobile_number) }      
      % else:
      ${ "do not know" }
      % endif    
  - Edit: other_parties[0].email_address
    button: |
      **${other_parties[0].name.full(middle='full')}'s email address:**
      % if other_parties[0].email_address == "":
      I don't know
      % else:
      ${other_parties[0].email_address}
      % endif
  - Edit: other_parties[0].bonus_contact_info
    button: |
      **Do you want to include additional contact information  for ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].bonus_contact_info))}
    show if: other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != ""
  - Edit: other_parties[0].alt_email
    button: |
      **${other_parties[0].name.full(middle='full')}'s additional contact information:**
      
      % if other_parties[0].alt_email != "":
      * Email: ${other_parties[0].alt_email}
      % endif
      % if other_parties[0].alt_phone != "":
      * Phone: ${phone_number_formatted(other_parties[0].alt_phone)}
      % endif
    show if: (other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != "") and other_parties[0].bonus_contact_info
  - Edit: respondent_on_social_media
    button: |
      **Is ${other_parties[0].name.full(middle="full")} active on social media?**
      ${ respondent_on_social_media }      
  - Edit: respondent_social_media_accounts
    button: |
      **${other_parties[0].name.full(middle="full")}'s social media accounts:**
      ${ respondent_social_media_accounts }
    show if: respondent_on_social_media == 'Yes'

  - Edit: other_parties[0].address_known
    button: | 
      **Do you know ${other_parties[0].name.full(middle='full')}'s current home address?**
      ${word(yesno(other_parties[0].address_known))}
  - Edit: other_parties[0].last_address_known
    button: |
      **Do you know ${other_parties[0].name.full(middle='full')}'s last known address?**
      ${word(yesno(other_parties[0].last_address_known))}
    show if: other_parties[0].address_known == False
  - Edit: other_parties[0].address.address
    button: |
      % if other_parties[0].address_known:
      **${other_parties[0].name.full(middle='full')}'s current home address:**
      % elif other_parties[0].last_address_known:
      **${other_parties[0].name.full(middle='full')}'s last known address:**
      % else:
      **${other_parties[0].name.full(middle='full')}'s address:**
      % endif
      ${other_parties[0].address.on_one_line(bare=True)}
    show if: other_parties[0].address_known or other_parties[0].last_address_known
  - Edit: other_parties[0].has_job
    button: |
      **Does ${other_parties[0].name.full(middle='full')} have a job?**
      ${word(yesno(other_parties[0].has_job))}
  - Edit: other_parties[0].employer_name
    button: |
      **${other_parties[0].name.full(middle='full')}'s job information:**
      
      * Employer name: ${showifdef('other_parties[0].employer_name')}
      * Occupation: ${showifdef('respondent_work_type')}
      * Standard work hours: ${showifdef('other_parties[0].work_hours')}
      * Address: ${other_parties[0].employer_address.on_one_line(bare=True)}
    show if: other_parties[0].has_job
  - Edit: caution_reasons
    button: |
        % if caution_reasons.any_true():
        **${other_parties[0].name.full(middle='full')} should be approached with caution because:**
        
        % if caution_reasons['illness']:
        * They have a history of mental illness.
        % endif
        % if caution_reasons['suicide']:
        * They are a suicide risk.
        % endif
        % if caution_reasons['alcohol']:
        * They are likely to be under the influence of alcohol.
        % endif
        % if caution_reasons['drugs']:
        * They are likely to be under the influence of drugs.
        % endif
        % if caution_reasons['armed']:
        * They are likely to carry a weapon.
        % endif
        % if caution_reasons['home']:
        * They have weapons in their home.
        % endif
        % else:
        **${other_parties[0].name.full(middle='full')} does not need to be approached with caution.**
        % endif
  - Edit: other_parties[0].weapons_info
    button: |
      **What weapons does ${other_parties[0].name.full(middle='full')} have?**
      % if other_parties[0].weapons_info == "":
      I don't know
      % else:
      ${other_parties[0].weapons_info}
      % endif
    show if: trial_court_index == -1 and (caution_reasons['armed'] or caution_reasons['home'])
  - Edit: previous_cook_case_type
    button: |
      **Previous Cook County case involving ${other_parties[0].name.full(middle="full")}:**
      ${ previous_cook_case_type.capitalize() }
    show if: trial_court_index == -1
  - Edit: previous_cook_case_date
    button: |
      **Previous Cook County ${ previous_cook_case_type } case info:**
      
      % if previous_cook_case_date == "" or previous_cook_case_date is None:
      * Date filed: None entered
      % else:
      * Date filed: ${ previous_cook_case_date }
      % endif
      % if previous_cook_case_number != "":
      * Case number: ${ previous_cook_case_number }
      % else:
      * Case number: None entered
      % endif
      % if previous_cook_case_judge != "":
      * Judge: ${ previous_cook_case_judge }
      % else:
      * Judge: None entered
      % endif
    show if: trial_court_index == -1 and previous_cook_case_type != "none"	
  - Edit: has_other_ops
    button: |
      **Has there been another protective order in any state against ${other_parties[0].name.full(middle='full')} involving you or other people you want to protect?**
      ${word(yesno(has_other_ops))}
  - Edit: other_ops.revisit
    button: |
      **Other protective orders: (Edit to change details)**

      % for my_var in other_ops:
      * Year: ${my_var.year}
      % endfor
    show if: has_other_ops
  - Edit: has_other_cases
    button: |
      **Has there been another court case in any state against ${other_parties[0].name.full(middle='full')} involving you or other people you want to protect?**
      ${word(yesno(has_other_cases))}
  - Edit: other_parties[0].order_of_protection
    button: |
      **Is there an Order of Protection against ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].order_of_protection))}
  - Edit: other_cases.revisit
    button: |
      **Other cases: (Edit to change details)**

      % for my_var in other_cases:
      * Year: ${my_var.year}
      % endfor
    show if: has_other_cases
  - Edit: respondent_jail_check
    button: |
      **Is ${other_parties[0].name.full(middle='full')} incarcerated?**
      % if respondent_jail_check and respondent_jail_name != "":
      Yes, in ${respondent_jail_name}
      % elif respondent_jail_check is None:
      I don't know
      % else:
      ${word(yesno(respondent_jail_check))}
      % endif
    show if: trial_court_index != -1
---
section: What happened
id: incidents review screen
event: section_incidents
question: |
  About what happened
subquestion: |
  Edit your answers below.
  
  ${ abusive_acts.table }
  % if abusive_acts.number_gathered() < 9:
  
  ${ abusive_acts.add_action() }
  % endif
review:
  - Edit: abuse_type
    button: |
      **Did what happened include non-consensual sexual conduct or penetration?**
      % if abuse_type["conduct"] and abuse_type["penetration"]:
      Yes, non-consensual sexual conduct and sexual penetration
      % elif abuse_type["conduct"]:
      Yes, non-consensual sexual conduct
      % elif abuse_type["penetration"]:
      Yes, non-consensual sexual penetration
      % else:
      I don't know.
      % endif
    show if: trial_court_index == -1
---
continue button field: abusive_acts.revisit
question: |
    Edit the incidents of abuse
subquestion: |
  ${ abusive_acts.table }
  % if abusive_acts.number_gathered() < 7:

  ${ abusive_acts.add_action() }
  % endif
---
id: other op revisit
continue button field: other_ops.revisit
question: |
  Edit the other protective orders
subquestion: |
  ${other_ops.table}
  % if other_ops.number_gathered() < 2:
  
  ${other_ops.add_action()}
  % endif
---
id: other case revisit
continue button field: other_cases.revisit
question: |
  Edit the other cases
subquestion: |
  ${other_cases.table}
  % if (previous_cook_case_type == "none" and other_cases.number_gathered() < 2) or other_cases.number_gathered() < 1:
  
  ${other_cases.add_action()}
  % endif
---
table: abusive_acts.table
rows: abusive_acts
columns:
  - Date: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Place, time, and additional information: |
      action_button_html(url_action(row_item.attr_name("review_events")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
table: other_ops.table
rows: other_ops
columns:
  - People involved: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Year: |
      row_item.year if defined("row_item.year") else ""
  - Details: |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
table: other_cases.table
rows: other_cases
columns:
  - People involved: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Year: |
      row_item.year if defined("row_item.year") else ""
  - Details: |
      action_button_html(url_action(row_item.attr_name("name.text")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: incident review screen
continue button field: x.review_events
generic object: Thing
question: |
  Edit the incident of abuse
review: 
  - Edit: x.name.text
    button: |
      **When did the incident take place?**
      % if x.time != "":
      
      * Date: ${x.name.text}
      * Time: ${x.time}
      % else:
      ${x.name.text}
      % endif
  - Edit: x.place
    button: |
      **Where did the incident take place?**
      ${x.place}
  - Edit: x.description
    button: |
      **What happened?**
      ${x.description}
  - Edit: x.police_check
    button: |
      **Was a police report filed?**
      ${word(yesno(x.police_check))}
  - Edit: x.police_number
    button: |
      **Police report number:**
      ${x.police_number}
    show if: x.police_check
---
section: Protections
id: protections review screen
event: section_protections
question: |
  Protections
subquestion: |
  Edit your answers below.
review:
  - Edit: order_type
    button: |
      **What type of CNCO ${do_does} ${you_behalf} want?**
      % if order_type['plenary'] and order_type['emergency']:
      Plenary Civil No Contact Order and Emergency Civil No Contact Order
      % elif order_type['plenary']:
      Plenary Civil No Contact Order
      % elif order_type['emergency']:
      Emergency Civil No Contact Order
      % else:
      None
      % endif
  - Edit: emergency_reason
    button: |
      **Why should the court grant an Emergency CNCO?**
      ${emergency_reason}
    show if: order_type['emergency'] and trial_court.address.county.lower() == "cook"
  - Edit: protection_requested
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do?**
      
      % if protection_requested['away_people']:
      * Stay away from ${me_them} and others
      % endif
      % if protection_requested['no_contact']:
      * Stop contacting ${me_them} and others whether in person, by phone, by e-mail, by note, or by sending messages through other people
      % endif
      % if protection_requested['away_places']:
      * Stay away from the locations of the survivor, survivor's family and household member's work or school
      % endif
      % if protection_requested['away_property']:
      * Stay away from ${my_their} pets and property
      % endif
    show if: trial_court_index == -1
  - Edit: protection_requested
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do?**
      
      % if protection_requested['away_people']:
      * Stay away from ${me_them} and others, and not take, hide, or damage any of ${my_their} property or pets
      % endif
      % if protection_requested['no_contact']:
      * Stop contacting ${me_them} and others whether in person, by phone, by e-mail, by note or by sending messages through other people
      % endif
      % if protection_requested['away_places']:
      * Stay away from the locations of the survivor, survivor's family and household member's home, work, school, or daycare
      % endif  
    show if: trial_court_index != -1
  - Edit: distance_state
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away?**
      ${distance_state} feet
    show if: protection_requested['away_places'] and trial_court_index != -1
  - Edit: distance_people
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away from ${you_behalf} and others?**
      ${distance_people} feet
    show if: protection_requested['away_people'] and trial_court_index == -1
  - Edit: distance_places
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away from the locations?**
      ${distance_places} feet
    show if: protection_requested['away_places'] and trial_court_index == -1
  - Edit: protected_place_types
    button: |
      **What kinds of places ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?**
      
      % if protected_place_types['Home']:
      * Home
      % endif
      % if protected_place_types['Workplace']:
      * Workplace
      % endif
      % if protected_place_types['School']:
      * School
      % endif
      % if protected_place_types['day_care']:
      * Daycare
      % endif
      % if protected_place_types['Other']:
      * Other
      % endif
    show if: protection_requested['away_places']
  - Edit: home.address
    button: |
      **${capitalize(your_behalf)} home address:**
      ${home.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Home'] and hide_address
  - Edit: users[0].address
    button: |
      **${capitalize(your_behalf)} home address:**
      ${users[0].address.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Home'] and not hide_address
  - Edit: protected_workplace.name
    button: |
      **The workplace ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_workplace.name}, ${protected_workplace.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Workplace']
  - Edit: protected_school.name
    button: |
      **The school ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_school.name}, ${protected_school.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['School']
  - Edit: protected_day_care.name
    button: |
      **The daycare ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_day_care.name}, ${protected_day_care.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['day_care']
  - Edit: other_places
    button: |
      **What other places ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?**
      ${other_places}
    show if: protection_requested['away_places'] and protected_place_types['Other']
  - Edit: same_school
    button: |
      **Do ${you_behalf} and ${other_parties[0].name.full(middle='full')} go to the same school?**
      ${word(yesno(same_school))}
    show if: trial_court_index != -1 and protection_requested['away_places'] and protected_place_types['School']
  - Edit: prohibit_school
    button: |
      **What school ${do_does} ${you_behalf} want the court to prohibit ${other_parties[0].name.full(middle='full')} from attending?**
      % if not prohibit_school:
      ${capitalize(i_they)} do not want to prohibit ${other_parties[0].name.full(middle='full')} from attending any school.
      % elif which_school == "protected_school":
      ${protected_school.name}, ${protected_school.on_one_line(bare=True)}
      % else:
      ${other_school.name}, ${other_school.on_one_line(bare=True)}
      % endif
    show if: trial_court_index != -1 and protection_requested['away_places'] and protected_place_types['School'] and same_school
  - Edit: respondent_is_minor
    button: |
      **Is ${other_parties[0].name.full(middle='full')} under 18 years old?**
      ${word(yesno(respondent_is_minor))}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and not knows_respondent_dob != "exact"
  - Edit: parents_or_guardians
    button: |
      **Does ${other_parties[0].name.full(middle='full')} have parents or guardians?**
      ${parents_or_guardians}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and (knows_respondent_dob != "exact" or other_parties[0].age_in_years() < 18)
  - Edit: parents_guardians.revisit
    button: |
      % if parents_or_guardians == "Parents":
      **${other_parties[0].name.full(middle='full')}'s parents: (Edit to change names)**
      % elif parents_or_guardians == "Guardians":
      **${other_parties[0].name.full(middle='full')}'s guardians: (Edit to change names)**
      % endif
      
      % for my_var in parents_guardians:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and (knows_respondent_dob != "exact" or other_parties[0].age_in_years() < 18) and parents_or_guardians != "none"
  - Edit: other_parties[0].anything_else
    button: |
      **${capitalize(do_does)} ${you_behalf} want the court to make ${other_parties[0].name.full(middle='full')} to do or stop doing anything else?**
      ${word(yesno(other_parties[0].anything_else))}
  - Edit: other_parties[0].what_else
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do or stop doing?**
      ${other_parties[0].what_else}
    show if: other_parties[0].anything_else
---
id: parents guardians review screen
continue button field: parents_guardians.revisit
question: |
    % if parents_or_guardians == "Parents":
    Edit ${other_parties[0].name.full(middle='full')}'s parents
    % elif parents_or_guardians == "Guardians":
    Edit ${other_parties[0].name.full(middle='full')}'s guardians
    % endif
subquestion: |
  ${ parents_guardians.table }

  ${ parents_guardians.add_action() }
---
table: parents_guardians.table
rows: parents_guardians
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Edit: |
      action_button_html(url_action(row_item.attr_name("parents_guardians_info")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: other protected info review screen
continue button field: x.parents_guardians_info
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Name:**
      ${x.name.full(middle='full')}
---
section: Filing and service details
id: filing service review screen
event: section_filing_info
question: |
  Filing and service details
subquestion: |
  Edit your answers below.
review:
  - Edit: 
      - trial_court_index
      - recompute:
        - filing_county
    button: |
      **You are filing in:**
      ${end_in_county(filing_county)}
  - Edit: cook_district
    button: |
      **Which courthouse will you file in?**
      % if cook_district == '15':
      First Municipal District, Daley Center, 50 W. Washington Street, Chicago
      % elif cook_district == '16':
      Second Municipal District, 5600 Old Orchard Road, Skokie
      % elif cook_district == '17':
      Third Municipal District, 2121 Euclid Avenue, Rolling Meadows
      % elif cook_district == '18':
      Fourth Municipal District, 1500 Maybrook Drive, Maywood
      % elif cook_district == '19':
      Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview
      % elif cook_district == '20':
      Sixth Municipal District, 16501 South Kedzie Parkway, Markham
      % endif
    show if: trial_court.address.county.lower() == "cook"
  - Edit: jurisdiction_type
    button: |
      **You are filing in ${end_in_county(trial_court.address.county)} because:**
      
      % if jurisdiction_type['I live here']:
      * I or someone I am filing for live in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Respondent lives here']:
      * The person I am filing against lives in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Abuse was here']:
      * The abuse took place in ${end_in_county(trial_court.address.county)}.
      % endif
  - Edit: service_method
    button: |
      **How do you want ${other_parties[0].name.full(middle="full")} to be served?**
      % if service_method == "sheriff":
      By the sheriff
      % elif service_method == "sps":
      By a special process server
      % elif service_method == "detective":
      By a licensed private detective
      % else:
      I don't know. I will decide later.
      % endif
  - Edit: other_parties[0].which_address
    button: |
      **Where can ${other_parties[0].name.full(middle='full')} be found for service?**
      % if other_parties[0].which_address == "home_address":
      ${other_parties[0].address.on_one_line(bare=True)}
      % elif other_parties[0].which_address == "employer_address":
      ${other_parties[0].employer_address.on_one_line(bare=True)}
      % elif other_parties[0].which_address == "add_service_address":
      ${other_parties[0].service_address.on_one_line(bare=True)}
      % endif
  - Edit: service_county
    button: |
      **County where ${other_parties[0].name.full(middle='full')} can be found:**
      ${end_in_county(service_county)}
    show if: service_method == "sheriff" and service_state != "IL"
  - Edit: other_parties[0].bonus_service_check
    button: |
      **Do you want to list another place where ${other_parties[0].name.full(middle='full')} can be found for service?**
      ${word(yesno(other_parties[0].bonus_service_check))}
  - Edit: other_parties[0].which_bonus_address
    button: |
      **Where else can ${other_parties[0].name.full(middle='full')} be found for service?**
      % if other_parties[0].which_bonus_address == "home_address":
      ${other_parties[0].address.on_one_line(bare=True)}
      % elif other_parties[0].which_bonus_address == "employer_address":
      ${other_parties[0].employer_address.on_one_line(bare=True)}
      % elif other_parties[0].which_bonus_address == "service_address":
      ${other_parties[0].bonus_service_address.on_one_line(bare=True)}
      % endif
    show if: other_parties[0].bonus_service_check
  - Edit: other_parties[0].bonus_contact_info
    button: |
      **Do you want to include additional contact information  for ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].bonus_contact_info))}
    show if: other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != ""
  - Edit: other_parties[0].alt_email
    button: |
      **${other_parties[0].name.full(middle='full')}'s additional contact information:**
      
      % if other_parties[0].alt_email != "":
      * Email: ${other_parties[0].alt_email}
      % endif
      % if other_parties[0].alt_phone != "":
      * Phone: ${phone_number_formatted(other_parties[0].alt_phone)}
      % endif
    show if: (other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != "") and other_parties[0].bonus_contact_info
  - Edit: service_information
    button: |
      **What other information will help serve ${other_parties[0].name.full(middle="full")}?**
      ${service_information}
  - Edit: case_number
    button: |
      **Case number:**
      ${case_number}
  - Edit: e_signature
    button: |
      **Do you want to add your electronic signature to your forms?**
      ${word(yesno(e_signature))}
---
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - note: |
      <h4>Basic info</h4>
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle='full')}
  - Edit: filing_for_whom
    button: |
      **You are filing for:**
      % if filing_for_whom == "me":
      Myself
      % elif filing_for_whom == "child":
      A child
      % elif filing_for_whom == "adult":
      An adult who cannot file for themself
      % endif
  - Edit: users[1].name.first
    button: |
      **Who are you filing on behalf of?**
      ${users[1].name.full(middle='full')}
    show if: filing_for_whom != "me"
  - Edit: protect_whom
    button: |
      **Who do you want to protect?**
      
      % if protect_whom['me']:
      * Myself
      % endif
      % if protect_whom['minor']:
      * A minor child
      % endif
      % if protect_whom['adult']:
      * An adult who cannot file due to age, disablility or health
      % endif
  - Edit: user_military
    button: |
        **Are you a service member of the Illinois National Guard or another reserve military component serving in Illinois?**
        % if user_military and has_military_order:
        Yes, and I have a Military Protective Order.
        % elif user_military:
        Yes, but I do not have a Military Protective Order.
        % else:
        No
        % endif
    show if: protect_whom['me']
  - Edit: other_parties[0].name.first
    button: |  
      **Perpetrator's name:**
      ${other_parties[0].name.full(middle='full')}
  - note: |
      <h4>People you want to protect</h4> 
  - Edit: users[0].phone_number
    button: |
      **Your safe phone number:**
      ${phone_number_formatted(users[0].phone_number)}
  - Edit: users[0].has_email_address
    button: |
      **Do you have an email address?**
      ${word(yesno(users[0].has_email_address))}
  - Edit: users[0].email    
    button: |
      **Your email address:**
      ${users[0].email}
    show if: users[0].has_email_address
  - Edit: hide_address
    button: |
      **${capitalize(do_does)} ${you_behalf} want to keep ${your_their} home address hidden?**
      ${word(yesno(hide_address))}
  - Edit: users[0].address.address
    button: |
      % if hide_address:
      **Your mailing address:**
      % else:
      **Your address:**
      % endif
      ${users[0].address.on_one_line(bare=True)}
  - Edit: users[1].address.address
    button: |
      **${users[1].name.full(middle='full')}'s address:**
      ${users[1].address.on_one_line(bare=True)}
    show if: filing_for_whom != "me" and not hide_address
  - Edit: users[0].birthdate
    button: |
      **Your birth date:**
      ${users[0].birthdate}
  - Edit: others_protected.there_are_any
    button: |
      **Do you want to protect anyone else with the CNCO?**
      ${word(yesno(others_protected.there_are_any))}
    show if: filing_for_whom == "me"
    #show if: protect_whom['minor'] == False and protect_whom['adult'] == False
  - Edit: others_protected.revisit
    button: |
      **Others to protect: (Edit to change names, addresses, and other information)**

      % for my_var in others_protected:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: others_protected.there_are_any
  - note: |
      <h4>What happened</h4>
  - Edit: abusive_acts.revisit
    button: |
      **Incidents of abuse: (Edit to change date, location, and other information)**

      % for my_var in abusive_acts:
        * ${ my_var.name.full(middle="full") }
      % endfor
  - Edit: abuse_type
    button: |
      **Did what happened include non-consensual sexual conduct or penetration?**
      % if abuse_type["conduct"] and abuse_type["penetration"]:
      Yes, non-consensual sexual conduct and sexual penetration
      % elif abuse_type["conduct"]:
      Yes, non-consensual sexual conduct
      % elif abuse_type["penetration"]:
      Yes, non-consensual sexual penetration
      % else:
      I don't know.
      % endif
    show if: trial_court_index == -1
  - note: |
      <h4>Protections</h4>
  - Edit: order_type
    button: |
      **What type of CNCO ${do_does} ${you_behalf} want?**
      % if order_type['plenary'] and order_type['emergency']:
      Plenary Civil No Contact Order and Emergency Civil No Contact Order
      % elif order_type['plenary']:
      Plenary Civil No Contact Order
      % elif order_type['emergency']:
      Emergency Civil No Contact Order
      % else:
      None
      % endif
  - Edit: emergency_reason
    button: |
      **Why should the court grant an Emergency CNCO?**
      ${emergency_reason}
    show if: order_type['emergency'] and trial_court.address.county.lower() == "cook"
  - Edit: protection_requested
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do?**
      
      % if protection_requested['away_people']:
      * Stay away from ${me_them} and others
      % endif
      % if protection_requested['no_contact']:
      * Stop contacting ${me_them} and others whether in person, by phone, by e-mail, by note, or by sending messages through other people
      % endif
      % if protection_requested['away_places']:
      * Stay away from the locations of the survivor, survivor's family and household member's work or school
      % endif
      % if protection_requested['away_property']:
      * Stay away from ${my_their} pets and property
      % endif
    show if: trial_court_index == -1
  - Edit: protection_requested
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do?**
      
      % if protection_requested['away_people']:
      * Stay away from ${me_them} and others, and not take, hide, or damage any of ${my_their} property or pets
      % endif
      % if protection_requested['no_contact']:
      * Stop contacting ${me_them} and others whether in person, by phone, by e-mail, by note or by sending messages through other people
      % endif
      % if protection_requested['away_places']:
      * Stay away from the locations of the survivor, survivor's family and household member's home, work, school, or daycare
      % endif  
    show if: trial_court_index != -1
  - Edit: distance_state
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away?**
      ${distance_state} feet
    show if: protection_requested['away_places'] and trial_court_index != -1
  - Edit: distance_people
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away from ${you_behalf} and others?**
      ${distance_people} feet
    show if: protection_requested['away_people'] and trial_court_index == -1
  - Edit: distance_places
    button: |
      **How far should ${other_parties[0].name.full(middle='full')} stay away from the locations?**
      ${distance_places} feet
    show if: protection_requested['away_places'] and trial_court_index == -1
  - Edit: protected_place_types
    button: |
      **What kinds of places ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?**
      
      % if protected_place_types['Home']:
      * Home
      % endif
      % if protected_place_types['Workplace']:
      * Workplace
      % endif
      % if protected_place_types['School']:
      * School
      % endif
      % if protected_place_types['day_care']:
      * Daycare
      % endif
      % if protected_place_types['Other']:
      * Other
      % endif
    show if: protection_requested['away_places']
  - Edit: home.address
    button: |
      **${capitalize(your_behalf)} home address:**
      ${home.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Home'] and hide_address
  - Edit: users[0].address
    button: |
      **${capitalize(your_behalf)} home address:**
      ${users[0].address.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Home'] and not hide_address
  - Edit: protected_workplace.name
    button: |
      **The workplace ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_workplace.name}, ${protected_workplace.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['Workplace']
  - Edit: protected_school.name
    button: |
      **The school ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_school.name}, ${protected_school.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['School']
  - Edit: protected_day_care.name
    button: |
      **The daycare ${other_parties[0].name.full(middle='full')} should stay away from:**
      ${protected_day_care.name}, ${protected_day_care.on_one_line(bare=True)}
    show if: protection_requested['away_places'] and protected_place_types['day_care']
  - Edit: other_places
    button: |
      **What other places ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to stay away from?**
      ${other_places}
    show if: protection_requested['away_places'] and protected_place_types['Other']
  - Edit: same_school
    button: |
      **Do ${you_behalf} and ${other_parties[0].name.full(middle='full')} go to the same school?**
      ${word(yesno(same_school))}
    show if: trial_court_index != -1 and protection_requested['away_places'] and protected_place_types['School']
  - Edit: prohibit_school
    button: |
      **What school ${do_does} ${you_behalf} want the court to prohibit ${other_parties[0].name.full(middle='full')} from attending?**
      % if not prohibit_school:
      ${capitalize(i_they)} do not want to prohibit ${other_parties[0].name.full(middle='full')} from attending any school.
      % elif which_school == "protected_school":
      ${protected_school.name}, ${protected_school.on_one_line(bare=True)}
      % else:
      ${other_school.name}, ${other_school.on_one_line(bare=True)}
      % endif
    show if: trial_court_index != -1 and protection_requested['away_places'] and protected_place_types['School'] and same_school
  - Edit: respondent_is_minor
    button: |
      **Is ${other_parties[0].name.full(middle='full')} under 18 years old?**
      ${word(yesno(respondent_is_minor))}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and not knows_respondent_dob != "exact"
  - Edit: parents_or_guardians
    button: |
      **Does ${other_parties[0].name.full(middle='full')} have parents or guardians?**
      ${parents_or_guardians}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and (knows_respondent_dob != "exact" or other_parties[0].age_in_years() < 18)
  - Edit: parents_guardians.revisit
    button: |
      % if parents_or_guardians == "Parents":
      **${other_parties[0].name.full(middle='full')}'s parents: (Edit to change names)**
      % elif parents_or_guardians == "Guardians":
      **${other_parties[0].name.full(middle='full')}'s guardians: (Edit to change names)**
      % endif
      
      % for my_var in parents_guardians:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and protection_requested['away_places'] and (knows_respondent_dob != "exact" or other_parties[0].age_in_years() < 18) and parents_or_guardians != "none"
  - Edit: other_parties[0].anything_else
    button: |
      **${capitalize(do_does)} ${you_behalf} want the court to make ${other_parties[0].name.full(middle='full')} to do or stop doing anything else?**
      ${word(yesno(other_parties[0].anything_else))}
  - Edit: other_parties[0].what_else
    button: |
      **What ${do_does} ${you_behalf} want ${other_parties[0].name.full(middle='full')} to do or stop doing?**
      ${other_parties[0].what_else}
    show if: other_parties[0].anything_else
  - note: |
      <h4>Person you want protection from</h4>
  - Edit: other_parties[0].name.first
    button: |  
      **Perpetrator's name:**
      ${other_parties[0].name.full(middle='full')}
  - Edit: other_parties[0].state_gender
    button: |
      **${other_parties[0].name.full(middle='full')}'s gender:**
      % if other_parties[0].state_gender == "Other":
      ${other_parties[0].state_other_gender}
      % else:
      ${other_parties[0].state_gender}
      % endif
    show if: trial_court_index != -1
  - Edit: other_parties[0].cook_sex
    button: |
      **${other_parties[0].name.full(middle='full')}'s sex:**
      % if other_parties[0].cook_sex == "other":
      ${other_parties[0].cook_sex_other}
      % else:
      ${other_parties[0].cook_sex}
      % endif
    show if: trial_court_index == -1
  - Edit: other_parties[0].respondent_sex_at_birth
    button: |
      **${other_parties[0].name.full(middle='full')}'s sex assigned at birth:**
      *${respondent_sex_at_birth}
    show if: trial_court_index == -1
  - Edit: other_parties[0].cook_gender
    button: |
      **${other_parties[0].name.full(middle='full')}'s gender identity:**
      
      % if other_parties[0].cook_gender["male"]:
      * Male
      % endif
      % if other_parties[0].cook_gender["female"]:
      * Female
      % endif
      % if other_parties[0].cook_gender["transfem"]:
      * Transgender woman / Transfeminine
      % endif
      % if other_parties[0].cook_gender["transmasc"]:
      * Transgender man / Transmasculine
      % endif
      % if other_parties[0].cook_gender["nonbinary"]:
      * Nonbinary / Gender non-conforming
      % endif
      % if other_parties[0].cook_gender["other"]:
      * ${respondent_cook_gender_other}
      % endif
    show if: trial_court_index == -1
  - Edit: other_parties[0].race
    button: |
      **${other_parties[0].name.full(middle='full')}'s race:**
      % if other_parties[0].race == "Other":
      ${respondent_race_other}
      % else:
      ${other_parties[0].race}
      % endif
  - Edit: other_parties[0].skin
    button: |
      **${other_parties[0].name.full(middle='full')}'s skin tone:**
      % if other_parties[0].skin_tone == "Other":
      ${respondent_skin_other}
      % else:
      ${other_parties[0].skin}
      % endif
  - Edit: knows_respondent_dob
    button: |
      **${other_parties[0].name.full(middle='full')}'s birth date:**
      % if knows_respondent_dob == "exact":
      ${other_parties[0].birthdate}
      % elif knows_respondent_dob == "some":
      ${other_parties[0].date_info}
      % else:
      I don't know
      % endif
  - Edit: respondent_is_minor
    button: |
      **Is ${other_parties[0].name.full(middle='full')} under 18 years old?**
      ${word(yesno(respondent_is_minor))}
    show if: trial_court_index != -1 and protected_place_types['School'] and same_school and prohibit_school and knows_respondent_dob != "exact"
  - Edit: other_parties[0].weight
    button: |
      **${other_parties[0].name.full(middle='full')}'s height and weight:**
      % if other_parties[0].height_feet != "" and other_parties[0].height_inches != "":
      % if other_parties[0].weight != "":
      ${other_parties[0].height_feet} feet ${other_parties[0].height_inches} inches, ${other_parties.weight} pounds
      % else:
      ${other_parties[0].height_feet} feet ${other_parties[0].height_inches} inches
      % endif
      % else:
      % if other_parties[0].weight != "":
      ${other_parties.weight} pounds
      % else:
      I don't know
      % endif
      % endif
  - Edit: other_parties[0].eyes
    button: |
      **${other_parties[0].name.full(middle='full')}'s eye color:**
      ${other_parties[0].eyes}
  - Edit: other_parties[0].glasses
    button: |
      **Does ${other_parties[0].name.full(middle='full')} wear glasses?**
      ${other_parties[0].glasses}
  - Edit: other_parties[0].hair
    button: |
      **${other_parties[0].name.full(middle='full')}'s hair color:**
      ${other_parties[0].hair}
  - Edit: other_parties[0].features
    button: |
      **${other_parties[0].name.full(middle='full')}'s notable features:**
      % if other_parties[0].features == "":
      I don't know
      % else:
      ${other_parties[0].features}
      % endif
  - Edit: other_parties[0].has_alias
    button: |
      % if other_parties[0].has_alias:
      **${other_parties[0].name.full(middle='full')} other names:**
      ${other_parties[0].alias_names}
      % elif other_parties[0].has_alias is None:
      **Has ${other_parties[0].name.full(middle='full')} gone by any other names?**
      I don't know
      % else:
      **Has ${other_parties[0].name.full(middle='full')} gone by any other names?**
      No
      % endif
  - Edit: other_parties[0].ssn
    button: |
      **The last 4 digits of ${other_parties[0].name.full(middle='full')}'s Social Security Number:**
      % if other_parties[0].ssn == "":
      I don't know
      % else:
      ${other_parties[0].ssn}
      % endif
  - Edit: other_parties[0].drivers_license
    button: |
      **${other_parties[0].name.full(middle='full')}'s driver's license number:**
      % if other_parties[0].drivers_license == "":
      I don't know
      % else:
      ${other_parties[0].drivers_license}
      % endif
  - Edit: other_parties[0].has_vehicle
    button: |  
      **Does ${other_parties[0].name.full(middle='full')} have access to a vehicle?**
      % if other_parties[0].has_vehicle is None:
      I don't know
      % else:
      ${word(yesno(other_parties[0].has_vehicle))}
      % endif
  - Edit: other_parties[0].license_plate
    button: |
      **${other_parties[0].name.full(middle='full')}'s vehicle information:**
      
      % if other_parties[0].vehicle_year == "":
      * Year: I don't know
      % else:
      * Year: %{other_parties[0].vehicle_year}
      % endif
      % if other_parties.vehicle_make == "":
      * Make: I don't know
      % else:
      * Make: ${other_parties[0].vehicle_make}
      % endif
      % if other_parties[0].vehicle_model == "":
      * Model: I don't know
      % else:
      * Model: ${other_parties[0].vehicle_model}
      % endif
      % if other_parties.vehicle_cololr == "":
      * Color: I don't know
      % else:
      * Color: ${other_parties[0].vehicle_color}
      % endif
      % if other_parties[0].license_plate == "":
      * License plate number: I don't know
      % else:
      * License plate number: ${other_parties[0].license_plate}
      % endif
      % if other_parties[0].vehicle_state == "":
      * State: I don't know
      % else:
      * State: ${other_parties[0].vehicle_state}
      % endif
    show if: other_parties[0].has_vehicle
  - Edit: other_parties[0].another_number_check
    button: |
      **Do you know another number that can identify ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].another_number_check))}
  - Edit: other_parties[0].another_number
    button: |
      **${other_parties[0].name.full(middle='full')} other identifying number:**
      ${other_parties[0].another_number}, ${other_parties[0].another_number_description}
    show if: other_parties[0].another_number_check
  - Edit: other_parties[0].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s home phone number:**
      % if other_parties[0].phone_number != "":
      ${ phone_number_formatted(other_parties[0].phone_number) }      
      % else:
      ${ "do not know" }
      % endif
  - Edit: other_parties[0].mobile_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s cell number:**
      % if other_parties[0].mobile_number != "":
      ${ phone_number_formatted(other_parties[0].mobile_number) }      
      % else:
      ${ "do not know" }
      % endif    
  - Edit: other_parties[0].email_address
    button: |
      **${other_parties[0].name.full(middle='full')}'s email address:**
      % if other_parties[0].email_address == "":
      I don't know
      % else:
      ${other_parties[0].email_address}
      % endif
  - Edit: other_parties[0].bonus_contact_info
    button: |
      **Do you want to include additional contact information  for ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].bonus_contact_info))}
    show if: other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != ""
  - Edit: other_parties[0].alt_email
    button: |
      **${other_parties[0].name.full(middle='full')}'s additional contact information:**
      
      % if other_parties[0].alt_email != "":
      * Email: ${other_parties[0].alt_email}
      % endif
      % if other_parties[0].alt_phone != "":
      * Phone: ${phone_number_formatted(other_parties[0].alt_phone)}
      % endif
    show if: (other_parties[0].email_address != "" or other_parties[0].phone_number != "" or other_parties[0].mobile_number != "") and other_parties[0].bonus_contact_info
  - Edit: respondent_on_social_media
    button: |
      **Is ${other_parties[0].name.full(middle="full")} active on social media?**
      ${ respondent_on_social_media }      
  - Edit: respondent_social_media_accounts
    button: |
      **${other_parties[0].name.full(middle="full")}'s social media accounts:**
      ${ respondent_social_media_accounts }
    show if: respondent_on_social_media == 'Yes'

  - Edit: other_parties[0].address_known
    button: | 
      **Do you know ${other_parties[0].name.full(middle='full')}'s current home address?**
      ${word(yesno(other_parties[0].address_known))}
  - Edit: other_parties[0].last_address_known
    button: |
      **Do you know ${other_parties[0].name.full(middle='full')}'s last known address?**
      ${word(yesno(other_parties[0].last_address_known))}
    show if: other_parties[0].address_known == False
  - Edit: other_parties[0].address.address
    button: |
      % if other_parties[0].address_known:
      **${other_parties[0].name.full(middle='full')}'s current home address:**
      % elif other_parties[0].last_address_known:
      **${other_parties[0].name.full(middle='full')}'s last known address:**
      % else:
      **${other_parties[0].name.full(middle='full')}'s address:**
      % endif
      ${other_parties[0].address.on_one_line(bare=True)}
    show if: other_parties[0].address_known or other_parties[0].last_address_known
  - Edit: other_parties[0].has_job
    button: |
      **Does ${other_parties[0].name.full(middle='full')} have a job?**
      ${word(yesno(other_parties[0].has_job))}
  - Edit: other_parties[0].employer_name
    button: |
      **${other_parties[0].name.full(middle='full')}'s job information:**
      
      * Employer name: ${showifdef('other_parties[0].employer_name')}
      * Occupation: ${showifdef('respondent_work_type')}
      * Standard work hours: ${showifdef('other_parties[0].work_hours')}
      * Address: ${other_parties[0].employer_address.on_one_line(bare=True)}
    show if: other_parties[0].has_job
  - Edit: caution_reasons
    button: |
        % if caution_reasons.any_true():
        **${other_parties[0].name.full(middle='full')} should be approached with caution because:**
        
        % if caution_reasons['illness']:
        * They have a history of mental illness.
        % endif
        % if caution_reasons['suicide']:
        * They are a suicide risk.
        % endif
        % if caution_reasons['alcohol']:
        * They are likely to be under the influence of alcohol.
        % endif
        % if caution_reasons['drugs']:
        * They are likely to be under the influence of drugs.
        % endif
        % if caution_reasons['armed']:
        * They are likely to carry a weapon.
        % endif
        % if caution_reasons['home']:
        * They have weapons in their home.
        % endif
        % else:
        **${other_parties[0].name.full(middle='full')} does not need to be approached with caution.**
        % endif
  - Edit: other_parties[0].weapons_info
    button: |
      **What weapons does ${other_parties[0].name.full(middle='full')} have?**
      % if other_parties[0].weapons_info == "":
      I don't know
      % else:
      ${other_parties[0].weapons_info}
      % endif
    show if: trial_court_index == -1 and (caution_reasons['armed'] or caution_reasons['home'])
  - Edit: previous_cook_case_type
    button: |
      **Previous Cook County case involving ${other_parties[0].name.full(middle="full")}:**
      ${ previous_cook_case_type.capitalize() }
    show if: trial_court_index == -1
  - Edit: previous_cook_case_date
    button: |
      **Previous Cook County ${ previous_cook_case_type } case info:**
      
      % if previous_cook_case_date == "" or previous_cook_case_date is None:
      * Date filed: None entered
      % else:
      * Date filed: ${ previous_cook_case_date }
      % endif
      % if previous_cook_case_number != "":
      * Case number: ${ previous_cook_case_number }
      % else:
      * Case number: None entered
      % endif
      % if previous_cook_case_judge != "":
      * Judge: ${ previous_cook_case_judge }
      % else:
      * Judge: None entered
      % endif
    show if: trial_court_index == -1 and previous_cook_case_type != "none"	
  - Edit: has_other_ops
    button: |
      **Has there been another protective order in any state against ${other_parties[0].name.full(middle='full')} involving you or other people you want to protect?**
      ${word(yesno(has_other_ops))}
  - Edit: other_ops.revisit
    button: |
      **Other protective orders: (Edit to change details)**

      % for my_var in other_ops:
      * Year: ${my_var.year}
      % endfor
    show if: has_other_ops
  - Edit: has_other_cases
    button: |
      **Has there been another court case in any state against ${other_parties[0].name.full(middle='full')} involving you or other people you want to protect?**
      ${word(yesno(has_other_cases))}
  - Edit: other_parties[0].order_of_protection
    button: |
      **Is there an Order of Protection against ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].order_of_protection))}
  - Edit: other_cases.revisit
    button: |
      **Other cases: (Edit to change details)**

      % for my_var in other_cases:
      * Year: ${my_var.year}
      % endfor
    show if: has_other_cases
  - Edit: other_parties[0].order_of_protection
    button: |
      **Is there an Order of Protection against ${other_parties[0].name.full(middle='full')}?**
      ${word(yesno(other_parties[0].order_of_protection))}
  - Edit: other_parties[0].op_state
    button: |
      **Where was the Order of Protection issued?**
      % if other_parties[0].op_state == "IL":
      % if other_parties[0].op_in_state_county == "":
      ${other_parties[0].op_state}
      % else:
      ${end_in_county(other_parties[0].op_in_state_county)}, ${other_parties[0].op_state}
      % endif
      % if other_parties[0].op_out_state_county == "":
      ${other_parties[0].op_state}
      % else:
      ${end_in_county(other_parties[0].op_out_state_county)}, ${other_parties[0].op_state}
      % endif
      % endif
    show if: other_parties[0].order_of_protection
  - Edit: respondent_on_probation
    button: |
      **Is ${other_parties[0].name.full(middle="full")} on probation?**
      % if respondent_on_probation == "idk":
      I don't know
      % elif respondent_on_probation == "Yes":
      Yes, in ${end_in_county(respondent_probation_county)}
      % else:
      No
      % endif  
  - Edit: respondent_jail_check
    button: |
      **Is ${other_parties[0].name.full(middle='full')} incarcerated?**
      % if respondent_jail_check and respondent_jail_name != "":
      Yes, in ${respondent_jail_name}
      % elif respondent_jail_check is None:
      I don't know
      % else:
      ${word(yesno(respondent_jail_check))}
      % endif
    show if: trial_court_index != -1
  - note: |
      <h4>Filing and service details</h4>
  - Edit: 
      - trial_court_index
      - recompute:
        - filing_county
    button: |
      **You are filing in:**
      ${end_in_county(filing_county)}
  - Edit: cook_district
    button: |
      **Which courthouse will you file in?**
      % if cook_district == '15':
      First Municipal District, Daley Center, 50 W. Washington Street, Chicago
      % elif cook_district == '16':
      Second Municipal District, 5600 Old Orchard Road, Skokie
      % elif cook_district == '17':
      Third Municipal District, 2121 Euclid Avenue, Rolling Meadows
      % elif cook_district == '18':
      Fourth Municipal District, 1500 Maybrook Drive, Maywood
      % elif cook_district == '19':
      Fifth Municipal District, 10220 S. 76th Avenue, Bridgeview
      % elif cook_district == '20':
      Sixth Municipal District, 16501 South Kedzie Parkway, Markham
      % endif
    show if: trial_court.address.county.lower() == "cook"
  - Edit: jurisdiction_type
    button: |
      **You are filing in ${end_in_county(trial_court.address.county)} because:**
      
      % if jurisdiction_type['I live here']:
      * I or someone I am filing for live in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Respondent lives here']:
      * The person I am filing against lives in ${end_in_county(trial_court.address.county)}.
      % endif
      % if jurisdiction_type['Abuse was here']:
      * The abuse took place in ${end_in_county(trial_court.address.county)}.
      % endif
  - Edit: service_method
    button: |
      **How do you want ${other_parties[0].name.full(middle="full")} to be served?**
      % if service_method == "sheriff":
      By the sheriff
      % elif service_method == "sps":
      By a special process server
      % elif service_method == "detective":
      By a licensed private detective
      % else:
      I don't know. I will decide later.
      % endif
  - Edit: other_parties[0].which_address
    button: |
      **Where can ${other_parties[0].name.full(middle='full')} be found for service?**
      % if other_parties[0].which_address == "home_address":
      ${other_parties[0].address.on_one_line(bare=True)}
      % elif other_parties[0].which_address == "employer_address":
      ${other_parties[0].employer_address.on_one_line(bare=True)}
      % elif other_parties[0].which_address == "add_service_address":
      ${other_parties[0].service_address.on_one_line(bare=True)}
      % endif
  - Edit: service_county
    button: |
      **County where ${other_parties[0].name.full(middle='full')} can be found:**
      ${end_in_county(service_county)}
    show if: service_method == "sheriff" and service_state != "IL"
  - Edit: other_parties[0].bonus_service_check
    button: |
      **Do you want to list another place where ${other_parties[0].name.full(middle='full')} can be found for service?**
      ${word(yesno(other_parties[0].bonus_service_check))}
  - Edit: other_parties[0].which_bonus_address
    button: |
      **Where else can ${other_parties[0].name.full(middle='full')} be found for service?**
      % if other_parties[0].which_bonus_address == "home_address":
      ${other_parties[0].address.on_one_line(bare=True)}
      % elif other_parties[0].which_bonus_address == "employer_address":
      ${other_parties[0].employer_address.on_one_line(bare=True)}
      % elif other_parties[0].which_bonus_address == "service_address":
      ${other_parties[0].bonus_service_address.on_one_line(bare=True)}
      % endif
    show if: other_parties[0].bonus_service_check
  - Edit: service_information
    button: |
      **What other information will help serve ${other_parties[0].name.full(middle="full")}?**
      ${service_information}
  - Edit: case_number
    button: |
      **Case number:**
      ${case_number}
  - Edit: e_signature
    button: |
      **Do you want to add your electronic signature to your forms?**
      ${word(yesno(e_signature))}